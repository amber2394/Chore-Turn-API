var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

import { h } from "preact";
import MaterialComponent from "../MaterialComponent";
import { MDCDialog } from "@material/dialog/";
import Button from "../Button";
/**
 */
class Dialog extends MaterialComponent {
  constructor() {
    super();
    this.componentName = "dialog";
    this._onAccept = this._onAccept.bind(this);
    this._onCancel = this._onCancel.bind(this);
  }
  componentDidMount() {
    this.MDComponent = new MDCDialog(this.control);
    this.MDComponent.listen("MDCDialog:accept", this._onAccept);
    this.MDComponent.listen("MDCDialog:cancel", this._onCancel);
  }
  componentWillUnmount() {
    this.MDComponent.unlisten("MDCDialog:accept", this._onAccept);
    this.MDComponent.unlisten("MDCDialog:cancel", this._onCancel);
    this.MDComponent.destroy && this.MDComponent.destroy();
  }
  _onAccept(e) {
    if (this.props.onAccept) {
      this.props.onAccept(e);
    }
  }
  _onCancel(e) {
    if (this.props.onCancel) {
      this.props.onCancel(e);
    }
  }
  materialDom(props) {
    return h(
      "aside",
      _extends({
        role: "alertdialog",
        ref: control => {
          this.control = control;
        }
      }, props),
      h(
        "div",
        { className: "mdc-dialog__surface" },
        props.children
      ),
      h("div", { className: "mdc-dialog__backdrop" })
    );
  }
}

class DialogHeader extends MaterialComponent {
  constructor() {
    super();
    this.componentName = "dialog__header";
  }
  materialDom(props) {
    return h(
      "header",
      props,
      h(
        "h2",
        { className: "mdc-dialog__header__title" },
        props.children
      )
    );
  }
}

/**
 * @prop scrollable = false
 */
class DialogBody extends MaterialComponent {
  constructor() {
    super();
    this.componentName = "dialog__body";
    this._mdcProps = ["scrollable"];
  }
  materialDom(props) {
    return h(
      "section",
      props,
      props.children
    );
  }
}

class DialogFooter extends MaterialComponent {
  constructor() {
    super();
    this.componentName = "dialog__footer";
  }
  materialDom(props) {
    return h(
      "footer",
      props,
      props.children
    );
  }
}

/**
 * @prop cancel = false
 * @prop accept = false
 */
class DialogFooterButton extends Button {
  constructor() {
    super();
    this.componentName = "dialog__footer__button";
    this._mdcProps = ["cancel", "accept"];
  }
  materialDom(props) {
    return h(
      "button",
      _extends({}, props, {
        className: "mdc-button",
        ref: control => {
          this.control = control;
        }
      }),
      props.children
    );
  }
}

Dialog.Header = DialogHeader;
Dialog.Body = DialogBody;
Dialog.Footer = DialogFooter;
Dialog.FooterButton = DialogFooterButton;

export default Dialog;