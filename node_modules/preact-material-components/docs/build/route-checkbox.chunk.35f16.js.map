{"version":3,"sources":["webpack:///route-checkbox.chunk.35f16.js","webpack:///./routes/checkbox/sample.txt","webpack:///../node_modules/@material/checkbox/foundation.js","webpack:///../node_modules/preact-material-components/Checkbox/index.js","webpack:///../node_modules/@material/checkbox/constants.js","webpack:///../node_modules/@material/checkbox/adapter.js","webpack:///../node_modules/@material/checkbox/index.js","webpack:///./routes/checkbox/index.js"],"names":["webpackJsonp","fG5c","nVyQ","module","exports","nyvU","__webpack_exports__","__webpack_require__","foundation__classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","validDescriptor","inputPropDesc","set","checkbox__classCallCheck","checkbox__possibleConstructorReturn","checkbox__inherits","Checkbox__classCallCheck","Checkbox__possibleConstructorReturn","Checkbox__inherits","_objectWithoutProperties","obj","keys","target","i","indexOf","hasOwnProperty","toggleCheckbox","oldprops","newprops","cbox","checked","indeterminate","jsx_pragmatic_js____module___preact___export___h___import___h______routes_checkbox__classCallCheck","jsx_pragmatic_js____module___preact___export___h___import___h______routes_checkbox__possibleConstructorReturn","jsx_pragmatic_js____module___preact___export___h___import___h______routes_checkbox__inherits","defineProperty","preact_min","MaterialComponent","animation","component","base_foundation","cssClasses","MDCCheckboxAdapter","addClass","removeClass","registerAnimationEndHandler","deregisterAnimationEndHandler","registerChangeHandler","deregisterChangeHandler","getNativeControl","forceLayout","isAttachedToDOM","UPGRADED","CHECKED","INDETERMINATE","DISABLED","ANIM_UNCHECKED_CHECKED","ANIM_UNCHECKED_INDETERMINATE","ANIM_CHECKED_UNCHECKED","ANIM_CHECKED_INDETERMINATE","ANIM_INDETERMINATE_CHECKED","ANIM_INDETERMINATE_UNCHECKED","strings","NATIVE_CONTROL_SELECTOR","TRANSITION_STATE_INIT","TRANSITION_STATE_CHECKED","TRANSITION_STATE_UNCHECKED","TRANSITION_STATE_INDETERMINATE","numbers","ANIM_END_LATCH_MS","_extends","assign","arguments","length","source","key","_createClass","defineProperties","props","descriptor","protoProps","staticProps","CB_PROTO_PROPS","foundation_MDCCheckboxFoundation","_MDCFoundation","MDCCheckboxFoundation","adapter","this","_this","defaultAdapter","currentCheckState_","currentAnimationClass_","animEndLatchTimer_","animEndHandler_","clearTimeout","setTimeout","adapter_","changeHandler_","transitionCheckState_","get","init","determineCheckState_","getNativeControl_","installPropertyChangeHooks_","destroy","uninstallPropertyChangeHooks_","isChecked","setChecked","isIndeterminate","setIndeterminate","isDisabled","disabled","setDisabled","getValue","setValue","_this2","nativeCb","cbProto","getPrototypeOf","forEach","controlState","desc","getOwnPropertyDescriptor","nativeCbDesc","state","oldState","newState","getTransitionAnimationClass_","_MDCCheckboxFoundatio","checkbox_foundation","ripple","util","checkbox__extends","checkbox__createClass","checkbox_MDCCheckbox","_MDCComponent","MDCCheckbox","_len","args","Array","_key","apply","concat","ripple_","initRipple_","attachTo","root","root_","querySelector","MATCHES","HTMLElement","createAdapter","isUnbounded","isSurfaceActive","nativeCb_","registerInteractionHandler","type","handler","addEventListener","deregisterInteractionHandler","removeEventListener","computeBoundingRect","_root_$getBoundingCli","getBoundingClientRect","left","top","right","bottom","width","height","foundation","getDefaultFoundation","_this3","className","classList","add","remove","window","offsetWidth","Boolean","parentNode","foundation_","Checkbox__extends","defaultProps","Checkbox_Checkbox","_MaterialComponent","Checkbox","componentName","_mdcProps","componentDidMount","MDComponent","control","componentWillUnmount","componentWillUpdate","nextProps","materialDom","allprops","ref","version","xmlns","viewBox","fill","stroke","d","Button","Formfield","component_table","code_block","sample","sample_default","n","checkbox_CheckboxPage","_ref","_ref2","class","a","_ref3","_ref4","href","_ref5","_ref6","for","id","_ref7","_ref8","_Component","CheckboxPage","propsTable","name","description","render","data","cb","raised","onClick"],"mappings":"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","file":"route-checkbox.chunk.35f16.js","sourcesContent":["webpackJsonp([16],{\n\n/***/ \"fG5c\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"nVyQ\":\n/***/ (function(module, exports) {\n\nmodule.exports = \"import {h, Component} from 'preact';\\nimport Checkbox from 'preact-material-components/Checkbox';\\nimport FormField from 'preact-material-components/FormField';\\nimport 'preact-material-components/Checkbox/style.css';\\n\\nexport default class CheckboxPage extends Component {\\n  render(){\\n    return (\\n      <FormField>\\n        <Checkbox id=\\\"basic-checkbox\\\" ref={cb=>{this.cb=cb;}}/>\\n        <label for=\\\"basic-checkbox\\\" id=\\\"basic-checkbox-label\\\">This is my checkbox</label>\\n      </FormField>\\n    );\\n  }\\n}\\n\"\n\n/***/ }),\n\n/***/ \"nyvU\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ../node_modules/preact/dist/preact.min.js\nvar preact_min = __webpack_require__(\"KM04\");\nvar preact_min_default = /*#__PURE__*/__webpack_require__.n(preact_min);\n\n// EXTERNAL MODULE: ../node_modules/preact-material-components/MaterialComponent.js\nvar MaterialComponent = __webpack_require__(\"lhA9\");\n\n// EXTERNAL MODULE: ../node_modules/@material/animation/index.js\nvar animation = __webpack_require__(\"5qFY\");\n\n// EXTERNAL MODULE: ../node_modules/@material/base/component.js\nvar component = __webpack_require__(\"EQDb\");\n\n// EXTERNAL MODULE: ../node_modules/@material/selection-control/index.js\nvar selection_control = __webpack_require__(\"BYeg\");\n\n// EXTERNAL MODULE: ../node_modules/@material/base/foundation.js\nvar base_foundation = __webpack_require__(\"uJAj\");\n\n// CONCATENATED MODULE: ../node_modules/@material/checkbox/adapter.js\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\n\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Checkbox. Provides an interface for managing\n * - classes\n * - dom\n * - event handlers\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/architecture.md\n *\n * @record\n */\n\nvar MDCCheckboxAdapter = function () {\n  function MDCCheckboxAdapter() {\n    _classCallCheck(this, MDCCheckboxAdapter);\n  }\n\n  /** @param {string} className */\n  MDCCheckboxAdapter.prototype.addClass = function addClass(className) {};\n\n  /** @param {string} className */\n\n\n  MDCCheckboxAdapter.prototype.removeClass = function removeClass(className) {};\n\n  /** @param {!EventListener} handler */\n\n\n  MDCCheckboxAdapter.prototype.registerAnimationEndHandler = function registerAnimationEndHandler(handler) {};\n\n  /** @param {!EventListener} handler */\n\n\n  MDCCheckboxAdapter.prototype.deregisterAnimationEndHandler = function deregisterAnimationEndHandler(handler) {};\n\n  /** @param {!EventListener} handler */\n\n\n  MDCCheckboxAdapter.prototype.registerChangeHandler = function registerChangeHandler(handler) {};\n\n  /** @param {!EventListener} handler */\n\n\n  MDCCheckboxAdapter.prototype.deregisterChangeHandler = function deregisterChangeHandler(handler) {};\n\n  /** @return {!MDCSelectionControlState} */\n\n\n  MDCCheckboxAdapter.prototype.getNativeControl = function getNativeControl() {};\n\n  MDCCheckboxAdapter.prototype.forceLayout = function forceLayout() {};\n\n  /** @return {boolean} */\n\n\n  MDCCheckboxAdapter.prototype.isAttachedToDOM = function isAttachedToDOM() {};\n\n  return MDCCheckboxAdapter;\n}();\n\n/* harmony default export */ var checkbox_adapter = (MDCCheckboxAdapter);\n// CONCATENATED MODULE: ../node_modules/@material/checkbox/constants.js\n/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nvar ROOT = 'mdc-checkbox';\n\n/** @enum {string} */\nvar cssClasses = {\n  UPGRADED: 'mdc-checkbox--upgraded',\n  CHECKED: 'mdc-checkbox--checked',\n  INDETERMINATE: 'mdc-checkbox--indeterminate',\n  DISABLED: 'mdc-checkbox--disabled',\n  ANIM_UNCHECKED_CHECKED: 'mdc-checkbox--anim-unchecked-checked',\n  ANIM_UNCHECKED_INDETERMINATE: 'mdc-checkbox--anim-unchecked-indeterminate',\n  ANIM_CHECKED_UNCHECKED: 'mdc-checkbox--anim-checked-unchecked',\n  ANIM_CHECKED_INDETERMINATE: 'mdc-checkbox--anim-checked-indeterminate',\n  ANIM_INDETERMINATE_CHECKED: 'mdc-checkbox--anim-indeterminate-checked',\n  ANIM_INDETERMINATE_UNCHECKED: 'mdc-checkbox--anim-indeterminate-unchecked'\n};\n\n/** @enum {string} */\nvar strings = {\n  NATIVE_CONTROL_SELECTOR: '.' + ROOT + '__native-control',\n  TRANSITION_STATE_INIT: 'init',\n  TRANSITION_STATE_CHECKED: 'checked',\n  TRANSITION_STATE_UNCHECKED: 'unchecked',\n  TRANSITION_STATE_INDETERMINATE: 'indeterminate'\n};\n\n/** @enum {number} */\nvar numbers = {\n  ANIM_END_LATCH_MS: 100\n};\n\n\n// CONCATENATED MODULE: ../node_modules/@material/checkbox/foundation.js\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction foundation__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/* eslint-disable no-unused-vars */\n\n\n/* eslint-enable no-unused-vars */\n\n\n/** @const {!Array<string>} */\nvar CB_PROTO_PROPS = ['checked', 'indeterminate'];\n\n/**\n * @extends {MDCFoundation<!MDCCheckboxAdapter>}\n */\n\nvar foundation_MDCCheckboxFoundation = function (_MDCFoundation) {\n  _inherits(MDCCheckboxFoundation, _MDCFoundation);\n\n  _createClass(MDCCheckboxFoundation, null, [{\n    key: 'cssClasses',\n\n    /** @return enum {cssClasses} */\n    get: function get() {\n      return cssClasses;\n    }\n\n    /** @return enum {strings} */\n\n  }, {\n    key: 'strings',\n    get: function get() {\n      return strings;\n    }\n\n    /** @return enum {numbers} */\n\n  }, {\n    key: 'numbers',\n    get: function get() {\n      return numbers;\n    }\n\n    /** @return {!MDCCheckboxAdapter} */\n\n  }, {\n    key: 'defaultAdapter',\n    get: function get() {\n      return (/** @type {!MDCCheckboxAdapter} */{\n          addClass: function addClass() /* className: string */{},\n          removeClass: function removeClass() /* className: string */{},\n          registerAnimationEndHandler: function registerAnimationEndHandler() /* handler: EventListener */{},\n          deregisterAnimationEndHandler: function deregisterAnimationEndHandler() /* handler: EventListener */{},\n          registerChangeHandler: function registerChangeHandler() /* handler: EventListener */{},\n          deregisterChangeHandler: function deregisterChangeHandler() /* handler: EventListener */{},\n          getNativeControl: function getNativeControl() /* !MDCSelectionControlState */{},\n          forceLayout: function forceLayout() {},\n          isAttachedToDOM: function isAttachedToDOM() /* boolean */{}\n        }\n      );\n    }\n  }]);\n\n  function MDCCheckboxFoundation(adapter) {\n    foundation__classCallCheck(this, MDCCheckboxFoundation);\n\n    /** @private {string} */\n    var _this = _possibleConstructorReturn(this, _MDCFoundation.call(this, _extends(MDCCheckboxFoundation.defaultAdapter, adapter)));\n\n    _this.currentCheckState_ = strings.TRANSITION_STATE_INIT;\n\n    /** @private {string} */\n    _this.currentAnimationClass_ = '';\n\n    /** @private {number} */\n    _this.animEndLatchTimer_ = 0;\n\n    _this.animEndHandler_ = /** @private {!EventListener} */function () {\n      clearTimeout(_this.animEndLatchTimer_);\n      _this.animEndLatchTimer_ = setTimeout(function () {\n        _this.adapter_.removeClass(_this.currentAnimationClass_);\n        _this.adapter_.deregisterAnimationEndHandler(_this.animEndHandler_);\n      }, numbers.ANIM_END_LATCH_MS);\n    };\n\n    _this.changeHandler_ = /** @private {!EventListener} */function () {\n      return _this.transitionCheckState_();\n    };\n    return _this;\n  }\n\n  MDCCheckboxFoundation.prototype.init = function init() {\n    this.currentCheckState_ = this.determineCheckState_(this.getNativeControl_());\n    this.adapter_.addClass(cssClasses.UPGRADED);\n    this.adapter_.registerChangeHandler(this.changeHandler_);\n    this.installPropertyChangeHooks_();\n  };\n\n  MDCCheckboxFoundation.prototype.destroy = function destroy() {\n    this.adapter_.deregisterChangeHandler(this.changeHandler_);\n    this.uninstallPropertyChangeHooks_();\n  };\n\n  /** @return {boolean} */\n\n\n  MDCCheckboxFoundation.prototype.isChecked = function isChecked() {\n    return this.getNativeControl_().checked;\n  };\n\n  /** @param {boolean} checked */\n\n\n  MDCCheckboxFoundation.prototype.setChecked = function setChecked(checked) {\n    this.getNativeControl_().checked = checked;\n  };\n\n  /** @return {boolean} */\n\n\n  MDCCheckboxFoundation.prototype.isIndeterminate = function isIndeterminate() {\n    return this.getNativeControl_().indeterminate;\n  };\n\n  /** @param {boolean} indeterminate */\n\n\n  MDCCheckboxFoundation.prototype.setIndeterminate = function setIndeterminate(indeterminate) {\n    this.getNativeControl_().indeterminate = indeterminate;\n  };\n\n  /** @return {boolean} */\n\n\n  MDCCheckboxFoundation.prototype.isDisabled = function isDisabled() {\n    return this.getNativeControl_().disabled;\n  };\n\n  /** @param {boolean} disabled */\n\n\n  MDCCheckboxFoundation.prototype.setDisabled = function setDisabled(disabled) {\n    this.getNativeControl_().disabled = disabled;\n    if (disabled) {\n      this.adapter_.addClass(cssClasses.DISABLED);\n    } else {\n      this.adapter_.removeClass(cssClasses.DISABLED);\n    }\n  };\n\n  /** @return {?string} */\n\n\n  MDCCheckboxFoundation.prototype.getValue = function getValue() {\n    return this.getNativeControl_().value;\n  };\n\n  /** @param {?string} value */\n\n\n  MDCCheckboxFoundation.prototype.setValue = function setValue(value) {\n    this.getNativeControl_().value = value;\n  };\n\n  /** @private */\n\n\n  MDCCheckboxFoundation.prototype.installPropertyChangeHooks_ = function installPropertyChangeHooks_() {\n    var _this2 = this;\n\n    var nativeCb = this.getNativeControl_();\n    var cbProto = Object.getPrototypeOf(nativeCb);\n\n    CB_PROTO_PROPS.forEach(function (controlState) {\n      var desc = Object.getOwnPropertyDescriptor(cbProto, controlState);\n      // We have to check for this descriptor, since some browsers (Safari) don't support its return.\n      // See: https://bugs.webkit.org/show_bug.cgi?id=49739\n      if (validDescriptor(desc)) {\n        var nativeCbDesc = /** @type {!ObjectPropertyDescriptor} */{\n          get: desc.get,\n          set: function set(state) {\n            desc.set.call(nativeCb, state);\n            _this2.transitionCheckState_();\n          },\n          configurable: desc.configurable,\n          enumerable: desc.enumerable\n        };\n        Object.defineProperty(nativeCb, controlState, nativeCbDesc);\n      }\n    });\n  };\n\n  /** @private */\n\n\n  MDCCheckboxFoundation.prototype.uninstallPropertyChangeHooks_ = function uninstallPropertyChangeHooks_() {\n    var nativeCb = this.getNativeControl_();\n    var cbProto = Object.getPrototypeOf(nativeCb);\n\n    CB_PROTO_PROPS.forEach(function (controlState) {\n      var desc = /** @type {!ObjectPropertyDescriptor} */Object.getOwnPropertyDescriptor(cbProto, controlState);\n      if (validDescriptor(desc)) {\n        Object.defineProperty(nativeCb, controlState, desc);\n      }\n    });\n  };\n\n  /** @private */\n\n\n  MDCCheckboxFoundation.prototype.transitionCheckState_ = function transitionCheckState_() {\n    var nativeCb = this.adapter_.getNativeControl();\n    if (!nativeCb) {\n      return;\n    }\n    var oldState = this.currentCheckState_;\n    var newState = this.determineCheckState_(nativeCb);\n    if (oldState === newState) {\n      return;\n    }\n\n    // Check to ensure that there isn't a previously existing animation class, in case for example\n    // the user interacted with the checkbox before the animation was finished.\n    if (this.currentAnimationClass_.length > 0) {\n      clearTimeout(this.animEndLatchTimer_);\n      this.adapter_.forceLayout();\n      this.adapter_.removeClass(this.currentAnimationClass_);\n    }\n\n    this.currentAnimationClass_ = this.getTransitionAnimationClass_(oldState, newState);\n    this.currentCheckState_ = newState;\n\n    // Check for parentNode so that animations are only run when the element is attached\n    // to the DOM.\n    if (this.adapter_.isAttachedToDOM() && this.currentAnimationClass_.length > 0) {\n      this.adapter_.addClass(this.currentAnimationClass_);\n      this.adapter_.registerAnimationEndHandler(this.animEndHandler_);\n    }\n  };\n\n  /**\n   * @param {!MDCSelectionControlState} nativeCb\n   * @return {string}\n   * @private\n   */\n\n\n  MDCCheckboxFoundation.prototype.determineCheckState_ = function determineCheckState_(nativeCb) {\n    var TRANSITION_STATE_INDETERMINATE = strings.TRANSITION_STATE_INDETERMINATE,\n        TRANSITION_STATE_CHECKED = strings.TRANSITION_STATE_CHECKED,\n        TRANSITION_STATE_UNCHECKED = strings.TRANSITION_STATE_UNCHECKED;\n\n\n    if (nativeCb.indeterminate) {\n      return TRANSITION_STATE_INDETERMINATE;\n    }\n    return nativeCb.checked ? TRANSITION_STATE_CHECKED : TRANSITION_STATE_UNCHECKED;\n  };\n\n  /**\n   * @param {string} oldState\n   * @param {string} newState\n   * @return {string}\n   */\n\n\n  MDCCheckboxFoundation.prototype.getTransitionAnimationClass_ = function getTransitionAnimationClass_(oldState, newState) {\n    var TRANSITION_STATE_INIT = strings.TRANSITION_STATE_INIT,\n        TRANSITION_STATE_CHECKED = strings.TRANSITION_STATE_CHECKED,\n        TRANSITION_STATE_UNCHECKED = strings.TRANSITION_STATE_UNCHECKED;\n    var _MDCCheckboxFoundatio = MDCCheckboxFoundation.cssClasses,\n        ANIM_UNCHECKED_CHECKED = _MDCCheckboxFoundatio.ANIM_UNCHECKED_CHECKED,\n        ANIM_UNCHECKED_INDETERMINATE = _MDCCheckboxFoundatio.ANIM_UNCHECKED_INDETERMINATE,\n        ANIM_CHECKED_UNCHECKED = _MDCCheckboxFoundatio.ANIM_CHECKED_UNCHECKED,\n        ANIM_CHECKED_INDETERMINATE = _MDCCheckboxFoundatio.ANIM_CHECKED_INDETERMINATE,\n        ANIM_INDETERMINATE_CHECKED = _MDCCheckboxFoundatio.ANIM_INDETERMINATE_CHECKED,\n        ANIM_INDETERMINATE_UNCHECKED = _MDCCheckboxFoundatio.ANIM_INDETERMINATE_UNCHECKED;\n\n\n    switch (oldState) {\n      case TRANSITION_STATE_INIT:\n        if (newState === TRANSITION_STATE_UNCHECKED) {\n          return '';\n        }\n      // fallthrough\n      case TRANSITION_STATE_UNCHECKED:\n        return newState === TRANSITION_STATE_CHECKED ? ANIM_UNCHECKED_CHECKED : ANIM_UNCHECKED_INDETERMINATE;\n      case TRANSITION_STATE_CHECKED:\n        return newState === TRANSITION_STATE_UNCHECKED ? ANIM_CHECKED_UNCHECKED : ANIM_CHECKED_INDETERMINATE;\n      // TRANSITION_STATE_INDETERMINATE\n      default:\n        return newState === TRANSITION_STATE_CHECKED ? ANIM_INDETERMINATE_CHECKED : ANIM_INDETERMINATE_UNCHECKED;\n    }\n  };\n\n  /**\n   * @return {!MDCSelectionControlState}\n   * @private\n   */\n\n\n  MDCCheckboxFoundation.prototype.getNativeControl_ = function getNativeControl_() {\n    return this.adapter_.getNativeControl() || {\n      checked: false,\n      indeterminate: false,\n      disabled: false,\n      value: null\n    };\n  };\n\n  return MDCCheckboxFoundation;\n}(base_foundation[\"a\" /* default */]);\n\n/**\n * @param {ObjectPropertyDescriptor|undefined} inputPropDesc\n * @return {boolean}\n */\n\n\nfunction validDescriptor(inputPropDesc) {\n  return !!inputPropDesc && typeof inputPropDesc.set === 'function';\n}\n\n/* harmony default export */ var checkbox_foundation = (foundation_MDCCheckboxFoundation);\n// EXTERNAL MODULE: ../node_modules/@material/ripple/index.js + 3 modules\nvar ripple = __webpack_require__(\"vkNc\");\n\n// EXTERNAL MODULE: ../node_modules/@material/ripple/util.js\nvar util = __webpack_require__(\"joOv\");\n\n// CONCATENATED MODULE: ../node_modules/@material/checkbox/index.js\nvar checkbox__extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar checkbox__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction checkbox__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction checkbox__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction checkbox__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-enable no-unused-vars */\n\n\n\n\n/**\n * @extends MDCComponent<!MDCCheckboxFoundation>\n * @implements {MDCSelectionControl}\n */\n\nvar checkbox_MDCCheckbox = function (_MDCComponent) {\n  checkbox__inherits(MDCCheckbox, _MDCComponent);\n\n  MDCCheckbox.attachTo = function attachTo(root) {\n    return new MDCCheckbox(root);\n  };\n\n  /**\n   * Returns the state of the native control element, or null if the native control element is not present.\n   * @return {?MDCSelectionControlState}\n   * @private\n   */\n\n\n  checkbox__createClass(MDCCheckbox, [{\n    key: 'nativeCb_',\n    get: function get() {\n      var NATIVE_CONTROL_SELECTOR = checkbox_foundation.strings.NATIVE_CONTROL_SELECTOR;\n\n      var cbEl = /** @type {?MDCSelectionControlState} */this.root_.querySelector(NATIVE_CONTROL_SELECTOR);\n      return cbEl;\n    }\n  }]);\n\n  function MDCCheckbox() {\n    checkbox__classCallCheck(this, MDCCheckbox);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    /** @private {!MDCRipple} */\n    var _this = checkbox__possibleConstructorReturn(this, _MDCComponent.call.apply(_MDCComponent, [this].concat(args)));\n\n    _this.ripple_ = _this.initRipple_();\n    return _this;\n  }\n\n  /**\n   * @return {!MDCRipple}\n   * @private\n   */\n\n\n  MDCCheckbox.prototype.initRipple_ = function initRipple_() {\n    var _this2 = this;\n\n    var MATCHES = Object(util[\"b\" /* getMatchesProperty */])(HTMLElement.prototype);\n    var adapter = checkbox__extends(ripple[\"a\" /* MDCRipple */].createAdapter(this), {\n      isUnbounded: function isUnbounded() {\n        return true;\n      },\n      isSurfaceActive: function isSurfaceActive() {\n        return _this2.nativeCb_[MATCHES](':active');\n      },\n      registerInteractionHandler: function registerInteractionHandler(type, handler) {\n        return _this2.nativeCb_.addEventListener(type, handler);\n      },\n      deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {\n        return _this2.nativeCb_.removeEventListener(type, handler);\n      },\n      computeBoundingRect: function computeBoundingRect() {\n        var _root_$getBoundingCli = _this2.root_.getBoundingClientRect(),\n            left = _root_$getBoundingCli.left,\n            top = _root_$getBoundingCli.top;\n\n        var DIM = 40;\n        return {\n          top: top,\n          left: left,\n          right: left + DIM,\n          bottom: top + DIM,\n          width: DIM,\n          height: DIM\n        };\n      }\n    });\n    var foundation = new ripple[\"b\" /* MDCRippleFoundation */](adapter);\n    return new ripple[\"a\" /* MDCRipple */](this.root_, foundation);\n  };\n\n  /** @return {!MDCCheckboxFoundation} */\n\n\n  MDCCheckbox.prototype.getDefaultFoundation = function getDefaultFoundation() {\n    var _this3 = this;\n\n    return new checkbox_foundation({\n      addClass: function addClass(className) {\n        return _this3.root_.classList.add(className);\n      },\n      removeClass: function removeClass(className) {\n        return _this3.root_.classList.remove(className);\n      },\n      registerAnimationEndHandler: function registerAnimationEndHandler(handler) {\n        return _this3.root_.addEventListener(Object(animation[\"a\" /* getCorrectEventName */])(window, 'animationend'), handler);\n      },\n      deregisterAnimationEndHandler: function deregisterAnimationEndHandler(handler) {\n        return _this3.root_.removeEventListener(Object(animation[\"a\" /* getCorrectEventName */])(window, 'animationend'), handler);\n      },\n      registerChangeHandler: function registerChangeHandler(handler) {\n        return _this3.nativeCb_.addEventListener('change', handler);\n      },\n      deregisterChangeHandler: function deregisterChangeHandler(handler) {\n        return _this3.nativeCb_.removeEventListener('change', handler);\n      },\n      getNativeControl: function getNativeControl() {\n        return _this3.nativeCb_;\n      },\n      forceLayout: function forceLayout() {\n        return _this3.root_.offsetWidth;\n      },\n      isAttachedToDOM: function isAttachedToDOM() {\n        return Boolean(_this3.root_.parentNode);\n      }\n    });\n  };\n\n  /** @return {!MDCRipple} */\n\n\n  MDCCheckbox.prototype.destroy = function destroy() {\n    this.ripple_.destroy();\n    _MDCComponent.prototype.destroy.call(this);\n  };\n\n  checkbox__createClass(MDCCheckbox, [{\n    key: 'ripple',\n    get: function get() {\n      return this.ripple_;\n    }\n\n    /** @return {boolean} */\n\n  }, {\n    key: 'checked',\n    get: function get() {\n      return this.foundation_.isChecked();\n    }\n\n    /** @param {boolean} checked */\n    ,\n    set: function set(checked) {\n      this.foundation_.setChecked(checked);\n    }\n\n    /** @return {boolean} */\n\n  }, {\n    key: 'indeterminate',\n    get: function get() {\n      return this.foundation_.isIndeterminate();\n    }\n\n    /** @param {boolean} indeterminate */\n    ,\n    set: function set(indeterminate) {\n      this.foundation_.setIndeterminate(indeterminate);\n    }\n\n    /** @return {boolean} */\n\n  }, {\n    key: 'disabled',\n    get: function get() {\n      return this.foundation_.isDisabled();\n    }\n\n    /** @param {boolean} disabled */\n    ,\n    set: function set(disabled) {\n      this.foundation_.setDisabled(disabled);\n    }\n\n    /** @return {?string} */\n\n  }, {\n    key: 'value',\n    get: function get() {\n      return this.foundation_.getValue();\n    }\n\n    /** @param {?string} value */\n    ,\n    set: function set(value) {\n      this.foundation_.setValue(value);\n    }\n  }]);\n\n  return MDCCheckbox;\n}(component[\"a\" /* default */]);\n\n\n// CONCATENATED MODULE: ../node_modules/preact-material-components/Checkbox/index.js\nfunction Checkbox__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Checkbox__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction Checkbox__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Checkbox__extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];\n  }return target;\n}\n\n\n\n\n\n/*\n * Default props for check box\n */\nvar defaultProps = {\n  checked: false,\n  indeterminate: false\n};\n\n/**\n */\n\nvar Checkbox_Checkbox = function (_MaterialComponent) {\n  Checkbox__inherits(Checkbox, _MaterialComponent);\n\n  function Checkbox() {\n    Checkbox__classCallCheck(this, Checkbox);\n\n    var _this = Checkbox__possibleConstructorReturn(this, _MaterialComponent.call(this));\n\n    _this.componentName = \"checkbox\";\n    _this._mdcProps = [\"disabled\"];\n    return _this;\n  }\n\n  Checkbox.prototype.componentDidMount = function componentDidMount() {\n    this.MDComponent = new checkbox_MDCCheckbox(this.control);\n    toggleCheckbox(defaultProps, this.props, this.MDComponent);\n  };\n\n  Checkbox.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.MDComponent.destroy && this.MDComponent.destroy();\n  };\n\n  Checkbox.prototype.componentWillUpdate = function componentWillUpdate(nextProps) {\n    toggleCheckbox(this.props, nextProps, this.MDComponent);\n  };\n\n  Checkbox.prototype.materialDom = function materialDom(allprops) {\n    var _this2 = this;\n\n    var className = allprops.className,\n        props = _objectWithoutProperties(allprops, [\"className\"]);\n\n    return Object(preact_min[\"h\"])(\"div\", {\n      className: \"mdc-checkbox \" + className,\n      ref: function ref(control) {\n        _this2.control = control;\n      }\n    }, Object(preact_min[\"h\"])(\"input\", Checkbox__extends({\n      type: \"checkbox\",\n      className: \"mdc-checkbox__native-control\"\n    }, props)), Object(preact_min[\"h\"])(\"div\", { className: \"mdc-checkbox__background\" }, Object(preact_min[\"h\"])(\"svg\", {\n      version: \"1.1\",\n      className: \"mdc-checkbox__checkmark\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 24 24\"\n    }, Object(preact_min[\"h\"])(\"path\", {\n      className: \"mdc-checkbox__checkmark__path\",\n      fill: \"none\",\n      stroke: \"white\",\n      d: \"M1.73,12.91 8.1,19.28 22.79,4.59\"\n    })), Object(preact_min[\"h\"])(\"div\", { className: \"mdc-checkbox__mixedmark\" })));\n  };\n\n  return Checkbox;\n}(MaterialComponent[\"a\" /* default */]);\n\n/*\n * Function to add declarative opening/closing to drawer\n */\n\n\n\nfunction toggleCheckbox(oldprops, newprops, cbox) {\n  if (\"checked\" in oldprops && \"checked\" in newprops && oldprops.checked !== newprops.checked) {\n    cbox.checked = newprops.checked;\n  }\n\n  if (\"indeterminate\" in oldprops && \"indeterminate\" in newprops && oldprops.indeterminate !== newprops.indeterminate) {\n    cbox.indeterminate = newprops.indeterminate;\n  }\n}\n// EXTERNAL MODULE: ../node_modules/preact-material-components/Button/index.js\nvar Button = __webpack_require__(\"7/cg\");\n\n// EXTERNAL MODULE: ../node_modules/preact-material-components/Formfield/index.js\nvar Formfield = __webpack_require__(\"thmM\");\n\n// EXTERNAL MODULE: ./components/component-table/index.js\nvar component_table = __webpack_require__(\"B/9r\");\n\n// EXTERNAL MODULE: ./components/code-block/index.js\nvar code_block = __webpack_require__(\"F4jb\");\n\n// EXTERNAL MODULE: ./routes/checkbox/style.scss\nvar style = __webpack_require__(\"fG5c\");\nvar style_default = /*#__PURE__*/__webpack_require__.n(style);\n\n// EXTERNAL MODULE: ./routes/checkbox/sample.txt\nvar sample = __webpack_require__(\"nVyQ\");\nvar sample_default = /*#__PURE__*/__webpack_require__.n(sample);\n\n// CONCATENATED MODULE: ../node_modules/babel-loader/lib?{\"babelrc\":false,\"presets\":[[\"/Users/prateekbh/projects/preact-material-components/docs/node_modules/babel-preset-env/lib/index.js\",{\"loose\":true,\"uglify\":true,\"modules\":false,\"targets\":{\"browsers\":[\"> 1%\",\"last 2 versions\",\"IE >= 9\"]},\"exclude\":[\"transform-regenerator\",\"transform-es2015-typeof-symbol\"]}],\"/Users/prateekbh/projects/preact-material-components/docs/node_modules/babel-preset-stage-1/lib/index.js\"],\"plugins\":[\"/Users/prateekbh/projects/preact-material-components/docs/node_modules/babel-plugin-transform-object-assign/lib/index.js\",\"/Users/prateekbh/projects/preact-material-components/docs/node_modules/babel-plugin-transform-decorators-legacy/lib/index.js\",\"/Users/prateekbh/projects/preact-material-components/docs/node_modules/babel-plugin-transform-react-constant-elements/lib/index.js\",\"/Users/prateekbh/projects/preact-material-components/docs/node_modules/babel-plugin-transform-react-remove-prop-types/lib/index.js\",[\"/Users/prateekbh/projects/preact-material-components/docs/node_modules/babel-plugin-transform-react-jsx/lib/index.js\",{\"pragma\":\"h\"}],[\"/Users/prateekbh/projects/preact-material-components/docs/node_modules/babel-plugin-jsx-pragmatic/jsx-pragmatic.js\",{\"module\":\"preact\",\"export\":\"h\",\"import\":\"h\"}]]}!./routes/checkbox/index.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return checkbox_CheckboxPage; });\n\n\nfunction jsx_pragmatic_js____module___preact___export___h___import___h______routes_checkbox__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction jsx_pragmatic_js____module___preact___export___h___import___h______routes_checkbox__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction jsx_pragmatic_js____module___preact___export___h___import___h______routes_checkbox__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Dependencies\n\n\n// Material Components\n\n\n\n\n// Components\n\n\n\n// Styles\n\n\n// Samples\n\n\n// Class\n\nvar _ref = Object(preact_min[\"h\"])(\n  \"div\",\n  { className: \"mdc-typography--display1\" },\n  \"Sample code \"\n);\n\nvar _ref2 = Object(preact_min[\"h\"])(\n  code_block[\"a\" /* default */],\n  null,\n  Object(preact_min[\"h\"])(\n    \"code\",\n    { \"class\": \"lang-js\" },\n    sample_default.a\n  )\n);\n\nvar _ref3 = Object(preact_min[\"h\"])(\n  \"div\",\n  { className: \"mdc-typography--display1\" },\n  \"Original documentation\"\n);\n\nvar _ref4 = Object(preact_min[\"h\"])(\n  \"div\",\n  { className: \"mdc-typography--body\" },\n  \"This component encapsulates\",\n  \" \",\n  Object(preact_min[\"h\"])(\n    \"span\",\n    { className: \"strong\" },\n    \"mdc-checkbox\"\n  ),\n  \", you can refer to its documentation\",\n  Object(preact_min[\"h\"])(\n    \"a\",\n    { href: \"https://github.com/material-components/material-components-web/tree/master/packages/mdc-checkbox\" },\n    \" \",\n    \"here\"\n  ),\n  \".\"\n);\n\nvar _ref5 = Object(preact_min[\"h\"])(\n  \"div\",\n  { className: \"mdc-typography--display1\" },\n  \"Demo \"\n);\n\nvar _ref6 = Object(preact_min[\"h\"])(\n  \"label\",\n  { \"for\": \"basic-checkbox\", id: \"basic-checkbox-label\" },\n  \"This is my checkbox\"\n);\n\nvar _ref7 = Object(preact_min[\"h\"])(\n  \"div\",\n  { className: \"mdc-typography--title\" },\n  \"Checked \"\n);\n\nvar _ref8 = Object(preact_min[\"h\"])(\n  \"label\",\n  { \"for\": \"basic-checkbox2\", id: \"basic-checkbox2-label\" },\n  \"This is checked checkbox\"\n);\n\nvar checkbox_CheckboxPage = function (_Component) {\n  jsx_pragmatic_js____module___preact___export___h___import___h______routes_checkbox__inherits(CheckboxPage, _Component);\n\n  function CheckboxPage() {\n    jsx_pragmatic_js____module___preact___export___h___import___h______routes_checkbox__classCallCheck(this, CheckboxPage);\n\n    var _this = jsx_pragmatic_js____module___preact___export___h___import___h______routes_checkbox__possibleConstructorReturn(this, _Component.call(this));\n\n    _this.propsTable = [{\n      component: \"Checkbox\",\n      props: [{\n        name: \"disabled\",\n        description: \"This makes the checkbox disabled\"\n      }, {\n        name: \"checked\",\n        description: \"This makes the checkbox checked\"\n      }, {\n        name: \"indeterminate\",\n        description: \"This makes the checkbox indeterminate\"\n      }]\n    }];\n    return _this;\n  }\n\n  CheckboxPage.prototype.render = function render() {\n    var _this2 = this;\n\n    return Object(preact_min[\"h\"])(\n      \"div\",\n      { className: \"page-checkbox\" },\n      Object(preact_min[\"h\"])(component_table[\"a\" /* default */], { data: this.propsTable }),\n      _ref,\n      _ref2,\n      _ref3,\n      _ref4,\n      _ref5,\n      Object(preact_min[\"h\"])(\n        Formfield[\"a\" /* default */],\n        null,\n        Object(preact_min[\"h\"])(Checkbox_Checkbox, {\n          id: \"basic-checkbox\",\n          ref: function ref(cb) {\n            _this2.cb = cb;\n          }\n        }),\n        _ref6\n      ),\n      Object(preact_min[\"h\"])(\n        Button[\"a\" /* default */],\n        {\n          raised: true,\n          onClick: function onClick() {\n            _this2.cb.MDComponent.indeterminate = true;\n          }\n        },\n        \"Make indeterminate\"\n      ),\n      _ref7,\n      Object(preact_min[\"h\"])(\n        Formfield[\"a\" /* default */],\n        null,\n        Object(preact_min[\"h\"])(Checkbox_Checkbox, {\n          id: \"basic-checkbox2\",\n          checked: true,\n          ref: function ref(cb) {\n            _this2.cb = cb;\n          }\n        }),\n        _ref8\n      )\n    );\n  };\n\n  return CheckboxPage;\n}(preact_min[\"Component\"]);\n\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// route-checkbox.chunk.35f16.js","module.exports = \"import {h, Component} from 'preact';\\nimport Checkbox from 'preact-material-components/Checkbox';\\nimport FormField from 'preact-material-components/FormField';\\nimport 'preact-material-components/Checkbox/style.css';\\n\\nexport default class CheckboxPage extends Component {\\n  render(){\\n    return (\\n      <FormField>\\n        <Checkbox id=\\\"basic-checkbox\\\" ref={cb=>{this.cb=cb;}}/>\\n        <label for=\\\"basic-checkbox\\\" id=\\\"basic-checkbox-label\\\">This is my checkbox</label>\\n      </FormField>\\n    );\\n  }\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./routes/checkbox/sample.txt\n// module id = nVyQ\n// module chunks = 16","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control';\nimport MDCCheckboxAdapter from './adapter';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings, numbers} from './constants';\n\n/** @const {!Array<string>} */\nconst CB_PROTO_PROPS = ['checked', 'indeterminate'];\n\n/**\n * @extends {MDCFoundation<!MDCCheckboxAdapter>}\n */\nclass MDCCheckboxFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {numbers} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return {!MDCCheckboxAdapter} */\n  static get defaultAdapter() {\n    return /** @type {!MDCCheckboxAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      registerAnimationEndHandler: (/* handler: EventListener */) => {},\n      deregisterAnimationEndHandler: (/* handler: EventListener */) => {},\n      registerChangeHandler: (/* handler: EventListener */) => {},\n      deregisterChangeHandler: (/* handler: EventListener */) => {},\n      getNativeControl: () => /* !MDCSelectionControlState */ {},\n      forceLayout: () => {},\n      isAttachedToDOM: () => /* boolean */ {},\n    });\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCCheckboxFoundation.defaultAdapter, adapter));\n\n    /** @private {string} */\n    this.currentCheckState_ = strings.TRANSITION_STATE_INIT;\n\n    /** @private {string} */\n    this.currentAnimationClass_ = '';\n\n    /** @private {number} */\n    this.animEndLatchTimer_ = 0;\n\n    this.animEndHandler_ = /** @private {!EventListener} */ (() => {\n      clearTimeout(this.animEndLatchTimer_);\n      this.animEndLatchTimer_ = setTimeout(() => {\n        this.adapter_.removeClass(this.currentAnimationClass_);\n        this.adapter_.deregisterAnimationEndHandler(this.animEndHandler_);\n      }, numbers.ANIM_END_LATCH_MS);\n    });\n\n    this.changeHandler_ = /** @private {!EventListener} */ (\n      () => this.transitionCheckState_());\n  }\n\n  init() {\n    this.currentCheckState_ = this.determineCheckState_(this.getNativeControl_());\n    this.adapter_.addClass(cssClasses.UPGRADED);\n    this.adapter_.registerChangeHandler(this.changeHandler_);\n    this.installPropertyChangeHooks_();\n  }\n\n  destroy() {\n    this.adapter_.deregisterChangeHandler(this.changeHandler_);\n    this.uninstallPropertyChangeHooks_();\n  }\n\n  /** @return {boolean} */\n  isChecked() {\n    return this.getNativeControl_().checked;\n  }\n\n  /** @param {boolean} checked */\n  setChecked(checked) {\n    this.getNativeControl_().checked = checked;\n  }\n\n  /** @return {boolean} */\n  isIndeterminate() {\n    return this.getNativeControl_().indeterminate;\n  }\n\n  /** @param {boolean} indeterminate */\n  setIndeterminate(indeterminate) {\n    this.getNativeControl_().indeterminate = indeterminate;\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.getNativeControl_().disabled;\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    this.getNativeControl_().disabled = disabled;\n    if (disabled) {\n      this.adapter_.addClass(cssClasses.DISABLED);\n    } else {\n      this.adapter_.removeClass(cssClasses.DISABLED);\n    }\n  }\n\n  /** @return {?string} */\n  getValue() {\n    return this.getNativeControl_().value;\n  }\n\n  /** @param {?string} value */\n  setValue(value) {\n    this.getNativeControl_().value = value;\n  }\n\n  /** @private */\n  installPropertyChangeHooks_() {\n    const nativeCb = this.getNativeControl_();\n    const cbProto = Object.getPrototypeOf(nativeCb);\n\n    CB_PROTO_PROPS.forEach((controlState) => {\n      const desc = Object.getOwnPropertyDescriptor(cbProto, controlState);\n      // We have to check for this descriptor, since some browsers (Safari) don't support its return.\n      // See: https://bugs.webkit.org/show_bug.cgi?id=49739\n      if (validDescriptor(desc)) {\n        const nativeCbDesc = /** @type {!ObjectPropertyDescriptor} */ ({\n          get: desc.get,\n          set: (state) => {\n            desc.set.call(nativeCb, state);\n            this.transitionCheckState_();\n          },\n          configurable: desc.configurable,\n          enumerable: desc.enumerable,\n        });\n        Object.defineProperty(nativeCb, controlState, nativeCbDesc);\n      }\n    });\n  }\n\n  /** @private */\n  uninstallPropertyChangeHooks_() {\n    const nativeCb = this.getNativeControl_();\n    const cbProto = Object.getPrototypeOf(nativeCb);\n\n    CB_PROTO_PROPS.forEach((controlState) => {\n      const desc = /** @type {!ObjectPropertyDescriptor} */ (\n        Object.getOwnPropertyDescriptor(cbProto, controlState));\n      if (validDescriptor(desc)) {\n        Object.defineProperty(nativeCb, controlState, desc);\n      }\n    });\n  }\n\n  /** @private */\n  transitionCheckState_() {\n    const nativeCb = this.adapter_.getNativeControl();\n    if (!nativeCb) {\n      return;\n    }\n    const oldState = this.currentCheckState_;\n    const newState = this.determineCheckState_(nativeCb);\n    if (oldState === newState) {\n      return;\n    }\n\n    // Check to ensure that there isn't a previously existing animation class, in case for example\n    // the user interacted with the checkbox before the animation was finished.\n    if (this.currentAnimationClass_.length > 0) {\n      clearTimeout(this.animEndLatchTimer_);\n      this.adapter_.forceLayout();\n      this.adapter_.removeClass(this.currentAnimationClass_);\n    }\n\n    this.currentAnimationClass_ = this.getTransitionAnimationClass_(oldState, newState);\n    this.currentCheckState_ = newState;\n\n    // Check for parentNode so that animations are only run when the element is attached\n    // to the DOM.\n    if (this.adapter_.isAttachedToDOM() && this.currentAnimationClass_.length > 0) {\n      this.adapter_.addClass(this.currentAnimationClass_);\n      this.adapter_.registerAnimationEndHandler(this.animEndHandler_);\n    }\n  }\n\n  /**\n   * @param {!MDCSelectionControlState} nativeCb\n   * @return {string}\n   * @private\n   */\n  determineCheckState_(nativeCb) {\n    const {\n      TRANSITION_STATE_INDETERMINATE,\n      TRANSITION_STATE_CHECKED,\n      TRANSITION_STATE_UNCHECKED,\n    } = strings;\n\n    if (nativeCb.indeterminate) {\n      return TRANSITION_STATE_INDETERMINATE;\n    }\n    return nativeCb.checked ? TRANSITION_STATE_CHECKED : TRANSITION_STATE_UNCHECKED;\n  }\n\n  /**\n   * @param {string} oldState\n   * @param {string} newState\n   * @return {string}\n   */\n  getTransitionAnimationClass_(oldState, newState) {\n    const {\n      TRANSITION_STATE_INIT,\n      TRANSITION_STATE_CHECKED,\n      TRANSITION_STATE_UNCHECKED,\n    } = strings;\n\n    const {\n      ANIM_UNCHECKED_CHECKED,\n      ANIM_UNCHECKED_INDETERMINATE,\n      ANIM_CHECKED_UNCHECKED,\n      ANIM_CHECKED_INDETERMINATE,\n      ANIM_INDETERMINATE_CHECKED,\n      ANIM_INDETERMINATE_UNCHECKED,\n    } = MDCCheckboxFoundation.cssClasses;\n\n    switch (oldState) {\n    case TRANSITION_STATE_INIT:\n      if (newState === TRANSITION_STATE_UNCHECKED) {\n        return '';\n      }\n    // fallthrough\n    case TRANSITION_STATE_UNCHECKED:\n      return newState === TRANSITION_STATE_CHECKED ? ANIM_UNCHECKED_CHECKED : ANIM_UNCHECKED_INDETERMINATE;\n    case TRANSITION_STATE_CHECKED:\n      return newState === TRANSITION_STATE_UNCHECKED ? ANIM_CHECKED_UNCHECKED : ANIM_CHECKED_INDETERMINATE;\n    // TRANSITION_STATE_INDETERMINATE\n    default:\n      return newState === TRANSITION_STATE_CHECKED ?\n        ANIM_INDETERMINATE_CHECKED : ANIM_INDETERMINATE_UNCHECKED;\n    }\n  }\n\n  /**\n   * @return {!MDCSelectionControlState}\n   * @private\n   */\n  getNativeControl_() {\n    return this.adapter_.getNativeControl() || {\n      checked: false,\n      indeterminate: false,\n      disabled: false,\n      value: null,\n    };\n  }\n}\n\n/**\n * @param {ObjectPropertyDescriptor|undefined} inputPropDesc\n * @return {boolean}\n */\nfunction validDescriptor(inputPropDesc) {\n  return !!inputPropDesc && typeof inputPropDesc.set === 'function';\n}\n\nexport default MDCCheckboxFoundation;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@material/checkbox/foundation.js","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport { h } from \"preact\";\nimport MaterialComponent from \"../MaterialComponent\";\nimport { MDCCheckbox } from \"@material/checkbox/\";\n\n/*\n * Default props for check box\n */\nconst defaultProps = {\n  checked: false,\n  indeterminate: false\n};\n\n/**\n */\nexport default class Checkbox extends MaterialComponent {\n  constructor() {\n    super();\n    this.componentName = \"checkbox\";\n    this._mdcProps = [\"disabled\"];\n  }\n  componentDidMount() {\n    this.MDComponent = new MDCCheckbox(this.control);\n    toggleCheckbox(defaultProps, this.props, this.MDComponent);\n  }\n  componentWillUnmount() {\n    this.MDComponent.destroy && this.MDComponent.destroy();\n  }\n  componentWillUpdate(nextProps) {\n    toggleCheckbox(this.props, nextProps, this.MDComponent);\n  }\n  materialDom(allprops) {\n    const { className } = allprops,\n          props = _objectWithoutProperties(allprops, [\"className\"]);\n    return h(\n      \"div\",\n      {\n        className: \"mdc-checkbox \" + className,\n        ref: control => {\n          this.control = control;\n        }\n      },\n      h(\"input\", _extends({\n        type: \"checkbox\",\n        className: \"mdc-checkbox__native-control\"\n      }, props)),\n      h(\n        \"div\",\n        { className: \"mdc-checkbox__background\" },\n        h(\n          \"svg\",\n          {\n            version: \"1.1\",\n            className: \"mdc-checkbox__checkmark\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            viewBox: \"0 0 24 24\"\n          },\n          h(\"path\", {\n            className: \"mdc-checkbox__checkmark__path\",\n            fill: \"none\",\n            stroke: \"white\",\n            d: \"M1.73,12.91 8.1,19.28 22.79,4.59\"\n          })\n        ),\n        h(\"div\", { className: \"mdc-checkbox__mixedmark\" })\n      )\n    );\n  }\n}\n\n/*\n * Function to add declarative opening/closing to drawer\n */\nfunction toggleCheckbox(oldprops, newprops, cbox) {\n  if (\"checked\" in oldprops && \"checked\" in newprops && oldprops.checked !== newprops.checked) {\n    cbox.checked = newprops.checked;\n  }\n\n  if (\"indeterminate\" in oldprops && \"indeterminate\" in newprops && oldprops.indeterminate !== newprops.indeterminate) {\n    cbox.indeterminate = newprops.indeterminate;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ../node_modules/preact-material-components/Checkbox/index.js","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nconst ROOT = 'mdc-checkbox';\n\n/** @enum {string} */\nconst cssClasses = {\n  UPGRADED: 'mdc-checkbox--upgraded',\n  CHECKED: 'mdc-checkbox--checked',\n  INDETERMINATE: 'mdc-checkbox--indeterminate',\n  DISABLED: 'mdc-checkbox--disabled',\n  ANIM_UNCHECKED_CHECKED: 'mdc-checkbox--anim-unchecked-checked',\n  ANIM_UNCHECKED_INDETERMINATE: 'mdc-checkbox--anim-unchecked-indeterminate',\n  ANIM_CHECKED_UNCHECKED: 'mdc-checkbox--anim-checked-unchecked',\n  ANIM_CHECKED_INDETERMINATE: 'mdc-checkbox--anim-checked-indeterminate',\n  ANIM_INDETERMINATE_CHECKED: 'mdc-checkbox--anim-indeterminate-checked',\n  ANIM_INDETERMINATE_UNCHECKED: 'mdc-checkbox--anim-indeterminate-unchecked',\n};\n\n/** @enum {string} */\nconst strings = {\n  NATIVE_CONTROL_SELECTOR: `.${ROOT}__native-control`,\n  TRANSITION_STATE_INIT: 'init',\n  TRANSITION_STATE_CHECKED: 'checked',\n  TRANSITION_STATE_UNCHECKED: 'unchecked',\n  TRANSITION_STATE_INDETERMINATE: 'indeterminate',\n};\n\n/** @enum {number} */\nconst numbers = {\n  ANIM_END_LATCH_MS: 100,\n};\n\nexport {cssClasses, strings, numbers};\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@material/checkbox/constants.js","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control';\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Checkbox. Provides an interface for managing\n * - classes\n * - dom\n * - event handlers\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/architecture.md\n *\n * @record\n */\nclass MDCCheckboxAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @param {!EventListener} handler */\n  registerAnimationEndHandler(handler) {}\n\n  /** @param {!EventListener} handler */\n  deregisterAnimationEndHandler(handler) {}\n\n  /** @param {!EventListener} handler */\n  registerChangeHandler(handler) {}\n\n  /** @param {!EventListener} handler */\n  deregisterChangeHandler(handler) {}\n\n  /** @return {!MDCSelectionControlState} */\n  getNativeControl() {}\n\n  forceLayout() {}\n\n  /** @return {boolean} */\n  isAttachedToDOM() {}\n}\n\nexport default MDCCheckboxAdapter;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@material/checkbox/adapter.js","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getCorrectEventName} from '@material/animation';\nimport MDCComponent from '@material/base/component';\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState, MDCSelectionControl} from '@material/selection-control';\n/* eslint-enable no-unused-vars */\nimport MDCCheckboxFoundation from './foundation';\nimport {MDCRipple, MDCRippleFoundation} from '@material/ripple';\nimport {getMatchesProperty} from '@material/ripple/util';\n\n/**\n * @extends MDCComponent<!MDCCheckboxFoundation>\n * @implements {MDCSelectionControl}\n */\nclass MDCCheckbox extends MDCComponent {\n  static attachTo(root) {\n    return new MDCCheckbox(root);\n  }\n\n  /**\n   * Returns the state of the native control element, or null if the native control element is not present.\n   * @return {?MDCSelectionControlState}\n   * @private\n   */\n  get nativeCb_() {\n    const {NATIVE_CONTROL_SELECTOR} = MDCCheckboxFoundation.strings;\n    const cbEl = /** @type {?MDCSelectionControlState} */ (\n      this.root_.querySelector(NATIVE_CONTROL_SELECTOR));\n    return cbEl;\n  }\n\n  constructor(...args) {\n    super(...args);\n\n    /** @private {!MDCRipple} */\n    this.ripple_ = this.initRipple_();\n  }\n\n  /**\n   * @return {!MDCRipple}\n   * @private\n   */\n  initRipple_() {\n    const MATCHES = getMatchesProperty(HTMLElement.prototype);\n    const adapter = Object.assign(MDCRipple.createAdapter(this), {\n      isUnbounded: () => true,\n      isSurfaceActive: () => this.nativeCb_[MATCHES](':active'),\n      registerInteractionHandler: (type, handler) => this.nativeCb_.addEventListener(type, handler),\n      deregisterInteractionHandler: (type, handler) => this.nativeCb_.removeEventListener(type, handler),\n      computeBoundingRect: () => {\n        const {left, top} = this.root_.getBoundingClientRect();\n        const DIM = 40;\n        return {\n          top,\n          left,\n          right: left + DIM,\n          bottom: top + DIM,\n          width: DIM,\n          height: DIM,\n        };\n      },\n    });\n    const foundation = new MDCRippleFoundation(adapter);\n    return new MDCRipple(this.root_, foundation);\n  }\n\n  /** @return {!MDCCheckboxFoundation} */\n  getDefaultFoundation() {\n    return new MDCCheckboxFoundation({\n      addClass: (className) => this.root_.classList.add(className),\n      removeClass: (className) => this.root_.classList.remove(className),\n      registerAnimationEndHandler:\n        (handler) => this.root_.addEventListener(getCorrectEventName(window, 'animationend'), handler),\n      deregisterAnimationEndHandler:\n        (handler) => this.root_.removeEventListener(getCorrectEventName(window, 'animationend'), handler),\n      registerChangeHandler: (handler) => this.nativeCb_.addEventListener('change', handler),\n      deregisterChangeHandler: (handler) => this.nativeCb_.removeEventListener('change', handler),\n      getNativeControl: () => this.nativeCb_,\n      forceLayout: () => this.root_.offsetWidth,\n      isAttachedToDOM: () => Boolean(this.root_.parentNode),\n    });\n  }\n\n  /** @return {!MDCRipple} */\n  get ripple() {\n    return this.ripple_;\n  }\n\n  /** @return {boolean} */\n  get checked() {\n    return this.foundation_.isChecked();\n  }\n\n  /** @param {boolean} checked */\n  set checked(checked) {\n    this.foundation_.setChecked(checked);\n  }\n\n  /** @return {boolean} */\n  get indeterminate() {\n    return this.foundation_.isIndeterminate();\n  }\n\n  /** @param {boolean} indeterminate */\n  set indeterminate(indeterminate) {\n    this.foundation_.setIndeterminate(indeterminate);\n  }\n\n  /** @return {boolean} */\n  get disabled() {\n    return this.foundation_.isDisabled();\n  }\n\n  /** @param {boolean} disabled */\n  set disabled(disabled) {\n    this.foundation_.setDisabled(disabled);\n  }\n\n  /** @return {?string} */\n  get value() {\n    return this.foundation_.getValue();\n  }\n\n  /** @param {?string} value */\n  set value(value) {\n    this.foundation_.setValue(value);\n  }\n\n  destroy() {\n    this.ripple_.destroy();\n    super.destroy();\n  }\n}\n\nexport {MDCCheckboxFoundation, MDCCheckbox};\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@material/checkbox/index.js","// Dependencies\nimport { h, Component } from \"preact\";\n\n// Material Components\nimport Checkbox from \"preact-material-components/Checkbox\";\nimport Button from \"preact-material-components/Button\";\nimport Formfield from \"preact-material-components/Formfield\";\n\n// Components\nimport ComponentTable from \"../../components/component-table\";\nimport CodeBlock from \"../../components/code-block\";\n\n// Styles\nimport \"./style\";\n\n// Samples\nimport sample from \"./sample.txt\";\n\n// Class\nexport default class CheckboxPage extends Component {\n  constructor() {\n    super();\n    this.propsTable = [\n      {\n        component: \"Checkbox\",\n        props: [\n          {\n            name: \"disabled\",\n            description: \"This makes the checkbox disabled\"\n          },\n          {\n            name: \"checked\",\n            description: \"This makes the checkbox checked\"\n          },\n          {\n            name: \"indeterminate\",\n            description: \"This makes the checkbox indeterminate\"\n          }\n        ]\n      }\n    ];\n  }\n  render() {\n    return (\n      <div className=\"page-checkbox\">\n        <ComponentTable data={this.propsTable} />\n\n        <div className=\"mdc-typography--display1\">Sample code </div>\n        <CodeBlock>\n          <code class=\"lang-js\">{sample}</code>\n        </CodeBlock>\n\n        <div className=\"mdc-typography--display1\">Original documentation</div>\n        <div className=\"mdc-typography--body\">\n          This component encapsulates{\" \"}\n          <span className=\"strong\">mdc-checkbox</span>, you can refer to its\n          documentation\n          <a href=\"https://github.com/material-components/material-components-web/tree/master/packages/mdc-checkbox\">\n            {\" \"}\n            here\n          </a>.\n        </div>\n\n        <div className=\"mdc-typography--display1\">Demo </div>\n        <Formfield>\n          <Checkbox\n            id=\"basic-checkbox\"\n            ref={cb => {\n              this.cb = cb;\n            }}\n          />\n          <label for=\"basic-checkbox\" id=\"basic-checkbox-label\">\n            This is my checkbox\n          </label>\n        </Formfield>\n        <Button\n          raised={true}\n          onClick={() => {\n            this.cb.MDComponent.indeterminate = true;\n          }}\n        >\n          Make indeterminate\n        </Button>\n\n        <div className=\"mdc-typography--title\">Checked </div>\n        <Formfield>\n          <Checkbox\n            id=\"basic-checkbox2\"\n            checked={true}\n            ref={cb => {\n              this.cb = cb;\n            }}\n          />\n          <label for=\"basic-checkbox2\" id=\"basic-checkbox2-label\">\n            This is checked checkbox\n          </label>\n        </Formfield>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./routes/checkbox/index.js"],"sourceRoot":""}