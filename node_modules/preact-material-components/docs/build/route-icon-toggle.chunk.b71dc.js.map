{"version":3,"sources":["webpack:///route-icon-toggle.chunk.b71dc.js","webpack:///../node_modules/@material/icon-toggle/foundation.js","webpack:///../node_modules/@material/icon-toggle/constants.js","webpack:///../node_modules/@material/icon-toggle/adapter.js","webpack:///../node_modules/@material/icon-toggle/index.js","webpack:///../node_modules/preact-material-components/IconToggle/index.js","webpack:///./routes/icon-toggle/index.js","webpack:///./routes/icon-toggle/sample.txt"],"names":["webpackJsonp","gv9U","module","__webpack_exports__","__webpack_require__","foundation__classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","isSpace","keyboardKey","key","keyCode","icon_toggle__classCallCheck","icon_toggle__possibleConstructorReturn","icon_toggle__inherits","IconToggle__classCallCheck","IconToggle__possibleConstructorReturn","IconToggle__inherits","jsx_pragmatic_js____module___preact___export___h___import___h______routes_icon_toggle__classCallCheck","jsx_pragmatic_js____module___preact___export___h___import___h______routes_icon_toggle__possibleConstructorReturn","jsx_pragmatic_js____module___preact___export___h___import___h______routes_icon_toggle__inherits","defineProperty","preact_min","component","base_foundation","cssClasses","MDCIconToggleAdapter","addClass","removeClass","registerInteractionHandler","deregisterInteractionHandler","setText","getTabIndex","setTabIndex","getAttr","setAttr","rmAttr","notifyChange","ROOT","DISABLED","strings","DATA_TOGGLE_ON","DATA_TOGGLE_OFF","ARIA_PRESSED","ARIA_DISABLED","ARIA_LABEL","CHANGE_EVENT","_extends","assign","target","i","arguments","length","source","hasOwnProperty","_createClass","defineProperties","props","descriptor","protoProps","staticProps","foundation_MDCIconToggleFoundation","_MDCFoundation","MDCIconToggleFoundation","adapter","this","_this","defaultAdapter","on_","disabled_","savedTabIndex_","toggleOnData_","toggleOffData_","clickHandler_","toggleFromEvt_","isHandlingKeydown_","keydownHandler_","evt","preventDefault","keyupHandler_","get","init","refreshToggleData","adapter_","_MDCIconToggleFoundat","parseJsonDataAttr_","destroy","toggle","isOn","undefined","_MDCIconToggleFoundat2","_ref","classToRemove","cssClass","_ref2","content","label","dataAttr","val","JSON","parse","isDisabled","setDisabled","isKeyboardActivated","icon_toggle_foundation","ripple","icon_toggle__extends","icon_toggle__createClass","icon_toggle_MDCIconToggle","_MDCComponent","MDCIconToggle","_len","args","Array","_key","apply","concat","ripple_","initRipple_","attachTo","root","_this2","createAdapter","isUnbounded","isSurfaceActive","foundation_","computeBoundingRect","_root_$getBoundingCli","root_","getBoundingClientRect","left","top","width","height","right","bottom","foundation","getDefaultFoundation","_this3","className","iconEl_","classList","add","remove","type","handler","addEventListener","removeEventListener","text","textContent","tabIndex","name","getAttribute","setAttribute","removeAttribute","evtData","emit","initialSyncWithDOM","on","disabled","sel","dataset","querySelector","set","MaterialComponent","IconToggle__extends","IconToggle_IconToggle","_MaterialComponent","IconToggle","componentName","_onChange","bind","e","onChange","componentDidMount","MDComponent","control","listen","componentWillUnmount","unlisten","materialDom","stringify","ref","children","component_table","code_block","sample","sample_default","n","d","icon_toggle_IconTogglePage","class","a","_ref3","_ref4","href","_ref5","_Component","IconTogglePage","propsTable","description","render","toggleOnIcon","toggleOffIcon","data","role","tabindex","aria-pressed","aria-label","data-toggle-on","data-toggle-off","oqLc","exports"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAAqBC,GAE7C,YAiLA,SAASC,GAA2BC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAE3H,QAASC,GAA2BC,EAAMC,GAAQ,IAAKD,EAAQ,KAAM,IAAIE,gBAAe,4DAAgE,QAAOD,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BD,EAAPC,EAElO,QAASE,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIP,WAAU,iEAAoEO,GAAeD,GAASE,UAAYC,OAAOC,OAAOH,GAAcA,EAAWC,WAAaG,aAAeC,MAAON,EAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,IAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,EAAUC,GAAcD,EAASW,UAAYV,GCoBje,QAASW,GAAQC,GACf,MAA2B,UAApBA,EAAYC,KAA2C,KAAxBD,EAAYE,QDoRpD,QAASC,GAA4BxB,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAE5H,QAASuB,GAAuCrB,EAAMC,GAAQ,IAAKD,EAAQ,KAAM,IAAIE,gBAAe,4DAAgE,QAAOD,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BD,EAAPC,EAE9O,QAASqB,GAAsBlB,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIP,WAAU,iEAAoEO,GAAeD,GAASE,UAAYC,OAAOC,OAAOH,GAAcA,EAAWC,WAAaG,aAAeC,MAAON,EAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,IAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,EAAUC,GAAcD,EAASW,UAAYV,GA8L7e,QAASkB,GAA2B3B,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAE3H,QAAS0B,GAAsCxB,EAAMC,GAAQ,IAAKD,EAAQ,KAAM,IAAIE,gBAAe,4DAAgE,QAAOD,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BD,EAAPC,EAE7O,QAASwB,GAAqBrB,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIP,WAAU,iEAAoEO,GAAeD,GAASE,UAAYC,OAAOC,OAAOH,GAAcA,EAAWC,WAAaG,aAAeC,MAAON,EAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,IAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,EAAUC,GAAcD,EAASW,UAAYV,GAgF5e,QAASqB,GAAsG9B,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEtM,QAAS6B,GAAiH3B,EAAMC,GAAQ,IAAKD,EAAQ,KAAM,IAAIE,gBAAe,4DAAgE,QAAOD,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BD,EAAPC,EAExT,QAAS2B,GAAgGxB,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIP,WAAU,iEAAoEO,GAAeD,GAASE,UAAYC,OAAOC,OAAOH,GAAcA,EAAWC,WAAaG,aAAeC,MAAON,EAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,IAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,EAAUC,GAAcD,EAASW,UAAYV,GAvvBvjBE,OAAOsB,eAAepC,EAAqB,cAAgBiB,OAAO,GAGlE,IAAIoB,GAAapC,EAAoB,QAIjCqC,EAAYrC,EAAoB,QAGhCsC,EAAkBtC,EAAoB,QEEpCuC,GFyCqB,WACzB,QAASC,MAKTA,EAAqB5B,UGzBrB6B,SHyB0C,aAK1CD,EAAqB5B,UG3BrB8B,YH2B6C,aAQ7CF,EAAqB5B,UG7BrB+B,2BH6B4D,aAQ5DH,EAAqB5B,UG/BrBgC,6BH+B8D,aAK9DJ,EAAqB5B,UGjCrBiC,QHiCyC,aAKzCL,EAAqB5B,UGnCrBkC,YHmC6C,aAK7CN,EAAqB5B,UGrCrBmC,YHqC6C,aAQ7CP,EAAqB5B,UGvCrBoC,QHuCyC,aAQzCR,EAAqB5B,UGzCrBqC,QHyCyC,aAKzCT,EAAqB5B,UG3CrBsC,OH2CwC,aAKxCV,EAAqB5B,UG7CrBuC,aH6C8C,iBE5G9CC,KAAM,kBACNC,SAAU,8BAINC,GACJC,eAAgB,iBAChBC,gBAAiB,kBACjBC,aAAc,eACdC,cAAe,gBACfC,WAAY,aACZC,aAAc,wBFoJZC,EAAWhD,OAAOiD,QAAU,SAAUC,GAAU,IAAK,GAAIC,GAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,GAAIG,GAASF,UAAUD,EAAI,KAAK,GAAIxC,KAAO2C,GAActD,OAAOD,UAAUwD,eAAe7D,KAAK4D,EAAQ3C,KAAQuC,EAAOvC,GAAO2C,EAAO3C,IAAY,MAAOuC,IAEnPM,EAAe,WAAc,QAASC,GAAiBP,EAAQQ,GAAS,IAAK,GAAIP,GAAI,EAAGA,EAAIO,EAAML,OAAQF,IAAK,CAAE,GAAIQ,GAAaD,EAAMP,EAAIQ,GAAWvD,WAAauD,EAAWvD,aAAc,EAAOuD,EAAWrD,cAAe,EAAU,SAAWqD,KAAYA,EAAWtD,UAAW,GAAML,OAAOsB,eAAe4B,EAAQS,EAAWhD,IAAKgD,IAAiB,MAAO,UAAUrE,EAAasE,EAAYC,GAAiJ,MAA9HD,IAAYH,EAAiBnE,EAAYS,UAAW6D,GAAiBC,GAAaJ,EAAiBnE,EAAauE,GAAqBvE,MC3J1hBwE,ED6LmC,SAAUC,GCpKjD,QAAAC,GAAYC,GAAS7E,EAAA8E,KAAAF,EAAA,IAAAG,GAAA3E,EAAA0E,KACnBH,EAAArE,KAAAwE,KAAMlB,EAAcgB,EAAwBI,eAAgBH,IADzC,OAInBE,GAAKE,KAAM,EAGXF,EAAKG,WAAY,EAGjBH,EAAKI,gBAAkB,EAGvBJ,EAAKK,cAAgB,KAGrBL,EAAKM,eAAiB,KAEtBN,EAAKO,cACH,iBAAMP,GAAKQ,kBAGbR,EAAKS,oBAAqB,EAE1BT,EAAKU,gBAAoD,SAA6BC,GACpF,GAAIrE,EAAQqE,GAEV,MADAX,GAAKS,oBAAqB,EACnBE,EAAIC,kBAIfZ,EAAKa,cAAkD,SAA6BF,GAC9ErE,EAAQqE,KACVX,EAAKS,oBAAqB,EAC1BT,EAAKQ,mBAlCUR,EDyXrB,MApNAvE,GAAUoE,EAAyBD,GAEnCP,EAAaQ,EAAyB,OACpCrD,IAAK,aACLsE,IAAK,WChML,MAAOvD,MDoMPf,IAAK,UACLsE,IAAK,WCjML,MAAOxC,MDqMP9B,IAAK,iBACLsE,IAAK,WClML,OACErD,SAAU,aACVC,YAAa,aACbC,2BAA4B,aAC5BC,6BAA8B,aAC9BC,QAAS,aACTC,YAAa,iBAAM,IACnBC,YAAa,aACbC,QAAS,iBAAC,IACVC,QAAS,aACTC,OAAQ,aACRC,aAAc,kBDyPlB0B,EAAwBjE,UC9MxBmF,KD8MyC,WC7MvChB,KAAKiB,oBACLjB,KAAKkB,SAAStD,2BAA2B,QAASoC,KAAKQ,eACvDR,KAAKkB,SAAStD,2BAA2B,UAAWoC,KAAKW,iBACzDX,KAAKkB,SAAStD,2BAA2B,QAASoC,KAAKc,gBDiNzDhB,EAAwBjE,UC9MxBoF,kBD8MsD,WC9MlC,GAAAE,GACwBrB,EAAwBvB,QAA3DC,EADW2C,EACX3C,eAAgBC,EADL0C,EACK1C,eACvBuB,MAAKM,cAAgBN,KAAKoB,mBAAmB5C,GAC7CwB,KAAKO,eAAiBP,KAAKoB,mBAAmB3C,IDoNhDqB,EAAwBjE,UCjNxBwF,QDiN4C,WChN1CrB,KAAKkB,SAASrD,6BAA6B,QAASmC,KAAKQ,eACzDR,KAAKkB,SAASrD,6BAA6B,UAAWmC,KAAKW,iBAC3DX,KAAKkB,SAASrD,6BAA6B,QAASmC,KAAKc,gBDuN3DhB,EAAwBjE,UCnNxB4E,eDmNmD,WClNjDT,KAAKsB,SAELtB,KAAKkB,SAAS9C,cAA+CmD,KADzCvB,KAAbG,OD2NTL,EAAwBjE,UCtNxB0F,KDsNyC,WCrNvC,MAAOvB,MAAKG,KD4NdL,EAAwBjE,UCxNxByF,ODwN2C,WCvNzCtB,KAAKG,IADkBjB,UAAAC,OAAA,OAAAqC,KAAAtC,UAAA,GAAAA,UAAA,IAAVc,KAAKG,GAAK,IAAAsB,GAGY3B,EAAwBvB,QAApDK,EAHgB6C,EAGhB7C,WAAYF,EAHI+C,EAGJ/C,YAEfsB,MAAKG,IACPH,KAAKkB,SAAShD,QAAQQ,EAAc,QAEpCsB,KAAKkB,SAAShD,QAAQQ,EAAc,QARf,IAAAgD,GAYnB1B,KAAKG,IAAMH,KAAKO,eAAiBP,KAAKM,cADzBqB,EAXMD,EAWhBE,QAGHD,IACF3B,KAAKkB,SAASvD,YAAYgE,EAfL,IAAAE,GAkBY7B,KAAKG,IAAMH,KAAKM,cAAgBN,KAAKO,eAAjEuB,EAlBgBD,EAkBhBC,QAASC,EAlBOF,EAkBPE,MAAOH,EAlBAC,EAkBAD,QAEnBA,IACF5B,KAAKkB,SAASxD,SAASkE,GAErBE,GACF9B,KAAKkB,SAASpD,QAAQgE,GAEpBC,GACF/B,KAAKkB,SAAShD,QAAQU,EAAYmD,ID0OtCjC,EAAwBjE,UClOxBuF,mBDkOuD,SClOpCY,GACjB,GAAMC,GAAMjC,KAAKkB,SAASjD,QAAQ+D,EAClC,OAAKC,GAGmCC,KAAKC,MAAMF,ODyOrDnC,EAAwBjE,UCrOxBuG,WDqO+C,WCpO7C,MAAOpC,MAAKI,WD2OdN,EAAwBjE,UCvOxBwG,YDuOgD,SCvOpCD,GACVpC,KAAKI,UAAYgC,CADK,IAGf9D,GAAYwB,EAAwBtC,WAApCc,SACAK,EAAiBmB,EAAwBvB,QAAzCI,aAEHqB,MAAKI,WACPJ,KAAKK,eAAiBL,KAAKkB,SAASnD,cACpCiC,KAAKkB,SAASlD,aAAa,GAC3BgC,KAAKkB,SAAShD,QAAQS,EAAe,QACrCqB,KAAKkB,SAASxD,SAASY,KAEvB0B,KAAKkB,SAASlD,YAAYgC,KAAKK,gBAC/BL,KAAKkB,SAAS/C,OAAOQ,GACrBqB,KAAKkB,SAASvD,YAAYW,KD+O9BwB,EAAwBjE,UC1OxByG,oBD0OwD,WCzOtD,MAAOtC,MAAKU,oBD6OPZ,GClZ6BvC,EAAA,GA+MtCgF,EAAA,EDoPIC,EAASvH,EAAoB,QAG7BwH,EAAuB3G,OAAOiD,QAAU,SAAUC,GAAU,IAAK,GAAIC,GAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,GAAIG,GAASF,UAAUD,EAAI,KAAK,GAAIxC,KAAO2C,GAActD,OAAOD,UAAUwD,eAAe7D,KAAK4D,EAAQ3C,KAAQuC,EAAOvC,GAAO2C,EAAO3C,IAAY,MAAOuC,IAE/P0D,EAA2B,WAAc,QAASnD,GAAiBP,EAAQQ,GAAS,IAAK,GAAIP,GAAI,EAAGA,EAAIO,EAAML,OAAQF,IAAK,CAAE,GAAIQ,GAAaD,EAAMP,EAAIQ,GAAWvD,WAAauD,EAAWvD,aAAc,EAAOuD,EAAWrD,cAAe,EAAU,SAAWqD,KAAYA,EAAWtD,UAAW,GAAML,OAAOsB,eAAe4B,EAAQS,EAAWhD,IAAKgD,IAAiB,MAAO,UAAUrE,EAAasE,EAAYC,GAAiJ,MAA9HD,IAAYH,EAAiBnE,EAAYS,UAAW6D,GAAiBC,GAAaJ,EAAiBnE,EAAauE,GAAqBvE,MIzctiBuH,EJ0e0B,SAAUC,GIrexC,QAAAC,KAAqBlG,EAAAqD,KAAA6C,EAAA,QAAAC,GAAA5D,UAAAC,OAAN4D,EAAMC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAANF,EAAME,GAAA/D,UAAA+D,EAAA,IAAAhD,GAAArD,EAAAoD,KACnB4C,EAAApH,KAAA0H,MAAAN,GAAA5C,MAAAmD,OAASJ,IADU,OAInB9C,GAAKmD,QAAUnD,EAAKoD,cAJDpD,EJgoBrB,MA1JApD,GAAsBgG,EAAeD,GAErCC,EI5eOS,SJ4ekB,SI5eTC,GACd,MAAO,IAAIV,GAAcU,IJogB3BV,EAAchH,UI/edwH,YJ+esC,WI/exB,GAAAG,GAAAxD,KACND,EAAU0C,EAAcD,EAAA,EAAUiB,cAAczD,OACpD0D,YAAa,kBAAM,GACnBC,gBAAiB,iBAAMH,GAAKI,YAAYtB,uBACxCuB,oBAAqB,WACnB,GADyBC,GAELN,EAAKO,MAAMC,wBAAxBC,EAFkBH,EAElBG,IACP,QACEA,OACAC,IALuBJ,EAEZI,IAIXC,MALU,GAMVC,OANU,GAOVC,MAAOJ,EAPG,GAQVK,OAAQL,EARE,OAYVM,EAAa,GAAI/B,GAAA,EAAoBzC,EAC3C,OAAO,IAAIyC,GAAA,EAAUxC,KAAK+D,MAAOQ,IJ4fnC1B,EAAchH,UIzfdwF,QJyfkC,WIxfhCrB,KAAKoD,QAAQ/B,UACbuB,EAAA/G,UAAMwF,QAAN7F,KAAAwE,OJ+fF6C,EAAchH,UI3fd2I,qBJ2f+C,WI3fxB,GAAAC,GAAAzE,IACrB,OAAO,IAAIuC,IACT7E,SAAU,SAACgH,GAAD,MAAeD,GAAKE,QAAQC,UAAUC,IAAIH,IACpD/G,YAAa,SAAC+G,GAAD,MAAeD,GAAKE,QAAQC,UAAUE,OAAOJ,IAC1D9G,2BAA4B,SAACmH,EAAMC,GAAP,MAAmBP,GAAKV,MAAMkB,iBAAiBF,EAAMC,IACjFnH,6BAA8B,SAACkH,EAAMC,GAAP,MAAmBP,GAAKV,MAAMmB,oBAAoBH,EAAMC,IACtFlH,QAAS,SAACqH,GAAD,MAAUV,GAAKE,QAAQS,YAAcD,GAC9CpH,YAAa,iBAAmB0G,GAAKV,MAAxB,UACb/F,YAAa,SAACqH,GAAD,MAAcZ,GAAKV,MAAMsB,SAAWA,GACjDpH,QAAS,SAACqH,EAAMrJ,GAAP,MAAiBwI,GAAKV,MAAMwB,aAAaD,EAAMrJ,IACxDiC,QAAS,SAACoH,EAAMrJ,GAAP,MAAiBwI,GAAKV,MAAMyB,aAAaF,EAAMrJ,IACxDkC,OAAQ,SAACmH,GAAD,MAAUb,GAAKV,MAAM0B,gBAAgBH,IAC7ClH,aAAc,SAACsH,GAAD,MAAajB,GAAKkB,KAAKpD,EAAwBhE,QAAQM,aAAc6G,OJwhBvF7C,EAAchH,UIphBd+J,mBJohB6C,WInhB3C5F,KAAK6F,GAA+E,SAA1E7F,KAAK+D,MAAMwB,aAAahD,EAAwBhE,QAAQG,cAClEsB,KAAK8F,SAAsF,SAA3E9F,KAAK+D,MAAMwB,aAAahD,EAAwBhE,QAAQI,gBJ0hB1EkE,EAAchH,UIngBdoF,kBJmgB4C,WIlgB1CjB,KAAK4D,YAAY3C,qBJsgBnByB,EAAyBG,IACvBpG,IAAK,UACLsE,IAAK,WIvlBO,GACgBgF,GAAO/F,KAAK+D,MAAMiC,QADlC,iBAEZ,OAAOD,GACoB/F,KAAK+D,MAAMkC,cAAcF,GAAQ/F,KAAK+D,SJ2lBjEtH,IAAK,KACLsE,IAAK,WIniBL,MAAOf,MAAK4D,YAAYrC,QJyiBxB2E,IAAK,SIriBA3E,GACLvB,KAAK4D,YAAYtC,OAAOC,MJ2iBxB9E,IAAK,WACLsE,IAAK,WIviBL,MAAOf,MAAK4D,YAAYxB,cJ6iBxB8D,IAAK,SIziBM9D,GACXpC,KAAK4D,YAAYvB,YAAYD,OJ6iBxBS,GIroBmBvF,EAAA,GJ0oBxB6I,EAAoBlL,EAAoB,QKlqBxCmL,EAAWtK,OAAOiD,QAAU,SAAUC,GAAU,IAAK,GAAIC,GAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,GAAIG,GAASF,UAAUD,EAAI,KAAK,GAAIxC,KAAO2C,GAActD,OAAOD,UAAUwD,eAAe7D,KAAK4D,EAAQ3C,KAAQuC,EAAOvC,GAAO2C,EAAO3C,IAAY,MAAOuC,IASlOqH,ELorBO,SAAUC,GKnrBpC,QAAAC,KAAczJ,EAAAkD,KAAAuG,EAAA,IAAAtG,GAAAlD,EAAAiD,KACZsG,EAAA9K,KAAAwE,MADY,OAEZC,GAAKuG,cAAgB,cACrBvG,EAAKwG,UAAYxG,EAAKwG,UAAUC,KAAfzG,GAHLA,EL6tBd,MAzCAjD,GAAqBuJ,EAAYD,GAYjCC,EAAW1K,UK3rBX4K,UL2rBiC,SK3rBvBE,GACJ3G,KAAKR,MAAMoH,UACb5G,KAAKR,MAAMoH,SAASD,IL+rBxBJ,EAAW1K,UK5rBXgL,kBL4rByC,WK3rBvC7G,KAAK8G,YAAc,GAAInE,GAAc3C,KAAK+G,SAC1C/G,KAAK8G,YAAYE,OAAO,uBAAwBhH,KAAKyG,YL+rBvDF,EAAW1K,UK7rBXoL,qBL6rB4C,WK5rB1CjH,KAAK8G,YAAYI,SAAS,uBAAwBlH,KAAKyG,WACvDzG,KAAK8G,YAAYzF,SAAWrB,KAAK8G,YAAYzF,WLgsB/CkF,EAAW1K,UK9rBXsL,YL8rBmC,SK9rBvB3H,GAAO,GAAAgE,GAAAxD,IAGjB,OAFIR,GAAM,oBAAmBA,EAAM,kBAAoB0C,KAAKkF,UAAU5H,EAAM,oBACxEA,EAAM,qBAAoBA,EAAM,mBAAqB0C,KAAKkF,UAAU5H,EAAM,qBACvE1D,OAAAuB,EAAA,GACL,IACA+I,KAAa5G,GACXkF,UAAW,kBAAoBlF,EAAMkF,WAAa,GAClD2C,IAAK,SAAAN,GACHvD,EAAKuD,QAAUA,KAGnBvH,EAAM8H,WLgsBHf,GK9tB+BJ,EAAA,GLmuBpCoB,EAAkBtM,EAAoB,QAGtCuM,EAAavM,EAAoB,QAGjCwM,EAASxM,EAAoB,QAC7ByM,EAA8BzM,EAAoB0M,EAAEF,EAGzBxM,GAAoB2M,EAAE5M,EAAqB,UAAW,WAAa,MAAO6M,IAwBzG,IAAInG,GM5tBI5F,OAAAuB,EAAA,UAAKqH,UAAU,4BAAf,gBNkuBJ7C,EMjuBI/F,OAAAuB,EAAA,GAACmK,EAAA,EAAD,KACE1L,OAAAuB,EAAA,WAAMyK,MAAM,WAAWJ,EAAAK,IN0uB7BC,EMvuBIlM,OAAAuB,EAAA,UAAKqH,UAAU,4BAAf,0BN6uBJuD,EM5uBInM,OAAAuB,EAAA,UAAKqH,UAAU,wBAAf,8BAC8B,IAC5B5I,OAAAuB,EAAA,WAAMqH,UAAU,UAAhB,mBAFF,uCAIE5I,OAAAuB,EAAA,QAAG6K,KAAK,uGACL,IADH,QAJF,KNgwBJC,EMtvBIrM,OAAAuB,EAAA,UAAKqH,UAAU,4BAAf,SApDamD,ENgzBY,SAAUO,GM/yBzC,QAAAC,KAAcpL,EAAA+C,KAAAqI,EAAA,IAAApI,GAAA/C,EAAA8C,KACZoI,EAAA5M,KAAAwE,MADY,OAEZC,GAAKqI,aAEDhL,UAAW,aACXkC,QAEI8F,KAAM,WACNiD,YAAa,yBAGbjD,KAAM,iBACNiD,YAAa,mCAGbjD,KAAM,kBACNiD,YAAa,sCAhBTtI,ENw2Bd,MAxDA9C,GAAgGkL,EAAgBD,GAuBhHC,EAAexM,UMjzBf2M,ONizBkC,WMhzBhC,GAAMC,IACJ3G,QAAS,WACTC,MAAO,yBAEH2G,GACJ5G,QAAS,kBACTC,MAAO,mBAET,OACEjG,QAAAuB,EAAA,cACEvB,OAAAuB,EAAA,GAACkK,EAAA,GAAeoB,KAAM3I,KAAKsI,aAD7B5G,EAAAG,EAAAmG,EAAAC,EAAAE,EAoBErM,OAAAuB,EAAA,GAACgJ,GACCuC,KAAK,SACLC,SAAS,IACTC,eAAa,QACbC,aAAW,mBACXC,iBAAgBP,EAChBQ,kBAAiBP,GANnB,qBNozBCL,GMz2BmChL,EAAA,YNg3BtC6L,KACA,SAAUnO,GO/3BhBA,EAAAoO,QAAA","file":"route-icon-toggle.chunk.b71dc.js","sourcesContent":["webpackJsonp([24],{\n\n/***/ \"gv9U\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ../node_modules/preact/dist/preact.min.js\nvar preact_min = __webpack_require__(\"KM04\");\nvar preact_min_default = /*#__PURE__*/__webpack_require__.n(preact_min);\n\n// EXTERNAL MODULE: ../node_modules/@material/base/component.js\nvar component = __webpack_require__(\"EQDb\");\n\n// EXTERNAL MODULE: ../node_modules/@material/base/foundation.js\nvar base_foundation = __webpack_require__(\"uJAj\");\n\n// CONCATENATED MODULE: ../node_modules/@material/icon-toggle/adapter.js\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Icon Toggle. Provides an interface for managing\n * - classes\n * - dom\n * - inner text\n * - event handlers\n * - event dispatch\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/architecture.md\n *\n * @record\n */\n\nvar MDCIconToggleAdapter = function () {\n  function MDCIconToggleAdapter() {\n    _classCallCheck(this, MDCIconToggleAdapter);\n  }\n\n  /** @param {string} className */\n  MDCIconToggleAdapter.prototype.addClass = function addClass(className) {};\n\n  /** @param {string} className */\n\n\n  MDCIconToggleAdapter.prototype.removeClass = function removeClass(className) {};\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n\n\n  MDCIconToggleAdapter.prototype.registerInteractionHandler = function registerInteractionHandler(type, handler) {};\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n\n\n  MDCIconToggleAdapter.prototype.deregisterInteractionHandler = function deregisterInteractionHandler(type, handler) {};\n\n  /** @param {string} text */\n\n\n  MDCIconToggleAdapter.prototype.setText = function setText(text) {};\n\n  /** @return {number} */\n\n\n  MDCIconToggleAdapter.prototype.getTabIndex = function getTabIndex() {};\n\n  /** @param {number} tabIndex */\n\n\n  MDCIconToggleAdapter.prototype.setTabIndex = function setTabIndex(tabIndex) {};\n\n  /**\n   * @param {string} name\n   * @return {string}\n   */\n\n\n  MDCIconToggleAdapter.prototype.getAttr = function getAttr(name) {};\n\n  /**\n   * @param {string} name\n   * @param {string} value\n   */\n\n\n  MDCIconToggleAdapter.prototype.setAttr = function setAttr(name, value) {};\n\n  /** @param {string} name */\n\n\n  MDCIconToggleAdapter.prototype.rmAttr = function rmAttr(name) {};\n\n  /** @param {!IconToggleEvent} evtData */\n\n\n  MDCIconToggleAdapter.prototype.notifyChange = function notifyChange(evtData) {};\n\n  return MDCIconToggleAdapter;\n}();\n\n/**\n * @typedef {!{\n *   isOn: boolean,\n * }}\n */\n\n\nvar IconToggleEvent = void 0;\n\n\n// CONCATENATED MODULE: ../node_modules/@material/icon-toggle/constants.js\n/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nvar cssClasses = {\n  ROOT: 'mdc-icon-toggle',\n  DISABLED: 'mdc-icon-toggle--disabled'\n};\n\n/** @enum {string} */\nvar strings = {\n  DATA_TOGGLE_ON: 'data-toggle-on',\n  DATA_TOGGLE_OFF: 'data-toggle-off',\n  ARIA_PRESSED: 'aria-pressed',\n  ARIA_DISABLED: 'aria-disabled',\n  ARIA_LABEL: 'aria-label',\n  CHANGE_EVENT: 'MDCIconToggle:change'\n};\n\n\n// CONCATENATED MODULE: ../node_modules/@material/icon-toggle/foundation.js\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction foundation__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/* eslint-disable no-unused-vars */\n\n\n\n/**\n * @extends {MDCFoundation<!MDCIconToggleAdapter>}\n */\n\nvar foundation_MDCIconToggleFoundation = function (_MDCFoundation) {\n  _inherits(MDCIconToggleFoundation, _MDCFoundation);\n\n  _createClass(MDCIconToggleFoundation, null, [{\n    key: 'cssClasses',\n    get: function get() {\n      return cssClasses;\n    }\n  }, {\n    key: 'strings',\n    get: function get() {\n      return strings;\n    }\n  }, {\n    key: 'defaultAdapter',\n    get: function get() {\n      return {\n        addClass: function addClass() /* className: string */{},\n        removeClass: function removeClass() /* className: string */{},\n        registerInteractionHandler: function registerInteractionHandler() /* type: string, handler: EventListener */{},\n        deregisterInteractionHandler: function deregisterInteractionHandler() /* type: string, handler: EventListener */{},\n        setText: function setText() /* text: string */{},\n        getTabIndex: function getTabIndex() {\n          return (/* number */0\n          );\n        },\n        setTabIndex: function setTabIndex() /* tabIndex: number */{},\n        getAttr: function getAttr() {\n          return (/* name: string */ /* string */''\n          );\n        },\n        setAttr: function setAttr() /* name: string, value: string */{},\n        rmAttr: function rmAttr() /* name: string */{},\n        notifyChange: function notifyChange() /* evtData: IconToggleEvent */{}\n      };\n    }\n  }]);\n\n  function MDCIconToggleFoundation(adapter) {\n    foundation__classCallCheck(this, MDCIconToggleFoundation);\n\n    /** @private {boolean} */\n    var _this = _possibleConstructorReturn(this, _MDCFoundation.call(this, _extends(MDCIconToggleFoundation.defaultAdapter, adapter)));\n\n    _this.on_ = false;\n\n    /** @private {boolean} */\n    _this.disabled_ = false;\n\n    /** @private {number} */\n    _this.savedTabIndex_ = -1;\n\n    /** @private {?IconToggleState} */\n    _this.toggleOnData_ = null;\n\n    /** @private {?IconToggleState} */\n    _this.toggleOffData_ = null;\n\n    _this.clickHandler_ = /** @private {!EventListener} */function () {\n      return _this.toggleFromEvt_();\n    };\n\n    /** @private {boolean} */\n    _this.isHandlingKeydown_ = false;\n\n    _this.keydownHandler_ = /** @private {!EventListener} */function ( /** @type {!KeyboardKey} */evt) {\n      if (isSpace(evt)) {\n        _this.isHandlingKeydown_ = true;\n        return evt.preventDefault();\n      }\n    };\n\n    _this.keyupHandler_ = /** @private {!EventListener} */function ( /** @type {!KeyboardKey} */evt) {\n      if (isSpace(evt)) {\n        _this.isHandlingKeydown_ = false;\n        _this.toggleFromEvt_();\n      }\n    };\n    return _this;\n  }\n\n  MDCIconToggleFoundation.prototype.init = function init() {\n    this.refreshToggleData();\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.registerInteractionHandler('keyup', this.keyupHandler_);\n  };\n\n  MDCIconToggleFoundation.prototype.refreshToggleData = function refreshToggleData() {\n    var _MDCIconToggleFoundat = MDCIconToggleFoundation.strings,\n        DATA_TOGGLE_ON = _MDCIconToggleFoundat.DATA_TOGGLE_ON,\n        DATA_TOGGLE_OFF = _MDCIconToggleFoundat.DATA_TOGGLE_OFF;\n\n    this.toggleOnData_ = this.parseJsonDataAttr_(DATA_TOGGLE_ON);\n    this.toggleOffData_ = this.parseJsonDataAttr_(DATA_TOGGLE_OFF);\n  };\n\n  MDCIconToggleFoundation.prototype.destroy = function destroy() {\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.deregisterInteractionHandler('keyup', this.keyupHandler_);\n  };\n\n  /** @private */\n\n\n  MDCIconToggleFoundation.prototype.toggleFromEvt_ = function toggleFromEvt_() {\n    this.toggle();\n    var isOn = this.on_;\n\n    this.adapter_.notifyChange( /** @type {!IconToggleEvent} */{ isOn: isOn });\n  };\n\n  /** @return {boolean} */\n\n\n  MDCIconToggleFoundation.prototype.isOn = function isOn() {\n    return this.on_;\n  };\n\n  /** @param {boolean=} isOn */\n\n\n  MDCIconToggleFoundation.prototype.toggle = function toggle() {\n    var isOn = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !this.on_;\n\n    this.on_ = isOn;\n\n    var _MDCIconToggleFoundat2 = MDCIconToggleFoundation.strings,\n        ARIA_LABEL = _MDCIconToggleFoundat2.ARIA_LABEL,\n        ARIA_PRESSED = _MDCIconToggleFoundat2.ARIA_PRESSED;\n\n\n    if (this.on_) {\n      this.adapter_.setAttr(ARIA_PRESSED, 'true');\n    } else {\n      this.adapter_.setAttr(ARIA_PRESSED, 'false');\n    }\n\n    var _ref = this.on_ ? this.toggleOffData_ : this.toggleOnData_,\n        classToRemove = _ref.cssClass;\n\n    if (classToRemove) {\n      this.adapter_.removeClass(classToRemove);\n    }\n\n    var _ref2 = this.on_ ? this.toggleOnData_ : this.toggleOffData_,\n        content = _ref2.content,\n        label = _ref2.label,\n        cssClass = _ref2.cssClass;\n\n    if (cssClass) {\n      this.adapter_.addClass(cssClass);\n    }\n    if (content) {\n      this.adapter_.setText(content);\n    }\n    if (label) {\n      this.adapter_.setAttr(ARIA_LABEL, label);\n    }\n  };\n\n  /**\n   * @param {string} dataAttr\n   * @return {!IconToggleState}\n   */\n\n\n  MDCIconToggleFoundation.prototype.parseJsonDataAttr_ = function parseJsonDataAttr_(dataAttr) {\n    var val = this.adapter_.getAttr(dataAttr);\n    if (!val) {\n      return {};\n    }\n    return (/** @type {!IconToggleState} */JSON.parse(val)\n    );\n  };\n\n  /** @return {boolean} */\n\n\n  MDCIconToggleFoundation.prototype.isDisabled = function isDisabled() {\n    return this.disabled_;\n  };\n\n  /** @param {boolean} isDisabled */\n\n\n  MDCIconToggleFoundation.prototype.setDisabled = function setDisabled(isDisabled) {\n    this.disabled_ = isDisabled;\n\n    var DISABLED = MDCIconToggleFoundation.cssClasses.DISABLED;\n    var ARIA_DISABLED = MDCIconToggleFoundation.strings.ARIA_DISABLED;\n\n\n    if (this.disabled_) {\n      this.savedTabIndex_ = this.adapter_.getTabIndex();\n      this.adapter_.setTabIndex(-1);\n      this.adapter_.setAttr(ARIA_DISABLED, 'true');\n      this.adapter_.addClass(DISABLED);\n    } else {\n      this.adapter_.setTabIndex(this.savedTabIndex_);\n      this.adapter_.rmAttr(ARIA_DISABLED);\n      this.adapter_.removeClass(DISABLED);\n    }\n  };\n\n  /** @return {boolean} */\n\n\n  MDCIconToggleFoundation.prototype.isKeyboardActivated = function isKeyboardActivated() {\n    return this.isHandlingKeydown_;\n  };\n\n  return MDCIconToggleFoundation;\n}(base_foundation[\"a\" /* default */]);\n\n/**\n * @typedef {!{\n *   key: string,\n *   keyCode: number\n * }}\n */\n\n\nvar KeyboardKey = void 0;\n\n/**\n * @param {!KeyboardKey} keyboardKey\n * @return {boolean}\n */\nfunction isSpace(keyboardKey) {\n  return keyboardKey.key === 'Space' || keyboardKey.keyCode === 32;\n}\n\n/** @record */\n\nvar IconToggleState = function IconToggleState() {\n  foundation__classCallCheck(this, IconToggleState);\n};\n\n/**\n * The aria-label value of the icon toggle, or undefined if there is no aria-label.\n * @export {string|undefined}\n */\n\n\nIconToggleState.prototype.label;\n\n/**\n * The text for the icon toggle, or undefined if there is no text.\n * @export {string|undefined}\n */\nIconToggleState.prototype.content;\n\n/**\n * The CSS class to add to the icon toggle, or undefined if there is no CSS class.\n * @export {string|undefined}\n */\nIconToggleState.prototype.cssClass;\n\n/* harmony default export */ var icon_toggle_foundation = (foundation_MDCIconToggleFoundation);\n// EXTERNAL MODULE: ../node_modules/@material/ripple/index.js + 3 modules\nvar ripple = __webpack_require__(\"vkNc\");\n\n// CONCATENATED MODULE: ../node_modules/@material/icon-toggle/index.js\nvar icon_toggle__extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar icon_toggle__createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction icon_toggle__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction icon_toggle__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction icon_toggle__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n/**\n * @extends {MDCComponent<!MDCIconToggleFoundation>}\n */\n\nvar icon_toggle_MDCIconToggle = function (_MDCComponent) {\n  icon_toggle__inherits(MDCIconToggle, _MDCComponent);\n\n  MDCIconToggle.attachTo = function attachTo(root) {\n    return new MDCIconToggle(root);\n  };\n\n  function MDCIconToggle() {\n    icon_toggle__classCallCheck(this, MDCIconToggle);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    /** @private {!MDCRipple} */\n    var _this = icon_toggle__possibleConstructorReturn(this, _MDCComponent.call.apply(_MDCComponent, [this].concat(args)));\n\n    _this.ripple_ = _this.initRipple_();\n    return _this;\n  }\n\n  /** @return {!Element} */\n\n\n  /**\n   * @return {!MDCRipple}\n   * @private\n   */\n  MDCIconToggle.prototype.initRipple_ = function initRipple_() {\n    var _this2 = this;\n\n    var adapter = icon_toggle__extends(ripple[\"a\" /* MDCRipple */].createAdapter(this), {\n      isUnbounded: function isUnbounded() {\n        return true;\n      },\n      isSurfaceActive: function isSurfaceActive() {\n        return _this2.foundation_.isKeyboardActivated();\n      },\n      computeBoundingRect: function computeBoundingRect() {\n        var dim = 48;\n\n        var _root_$getBoundingCli = _this2.root_.getBoundingClientRect(),\n            left = _root_$getBoundingCli.left,\n            top = _root_$getBoundingCli.top;\n\n        return {\n          left: left,\n          top: top,\n          width: dim,\n          height: dim,\n          right: left + dim,\n          bottom: left + dim\n        };\n      }\n    });\n    var foundation = new ripple[\"b\" /* MDCRippleFoundation */](adapter);\n    return new ripple[\"a\" /* MDCRipple */](this.root_, foundation);\n  };\n\n  MDCIconToggle.prototype.destroy = function destroy() {\n    this.ripple_.destroy();\n    _MDCComponent.prototype.destroy.call(this);\n  };\n\n  /** @return {!MDCIconToggleFoundation} */\n\n\n  MDCIconToggle.prototype.getDefaultFoundation = function getDefaultFoundation() {\n    var _this3 = this;\n\n    return new icon_toggle_foundation({\n      addClass: function addClass(className) {\n        return _this3.iconEl_.classList.add(className);\n      },\n      removeClass: function removeClass(className) {\n        return _this3.iconEl_.classList.remove(className);\n      },\n      registerInteractionHandler: function registerInteractionHandler(type, handler) {\n        return _this3.root_.addEventListener(type, handler);\n      },\n      deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {\n        return _this3.root_.removeEventListener(type, handler);\n      },\n      setText: function setText(text) {\n        return _this3.iconEl_.textContent = text;\n      },\n      getTabIndex: function getTabIndex() {\n        return (/* number */_this3.root_.tabIndex\n        );\n      },\n      setTabIndex: function setTabIndex(tabIndex) {\n        return _this3.root_.tabIndex = tabIndex;\n      },\n      getAttr: function getAttr(name, value) {\n        return _this3.root_.getAttribute(name, value);\n      },\n      setAttr: function setAttr(name, value) {\n        return _this3.root_.setAttribute(name, value);\n      },\n      rmAttr: function rmAttr(name) {\n        return _this3.root_.removeAttribute(name);\n      },\n      notifyChange: function notifyChange(evtData) {\n        return _this3.emit(icon_toggle_foundation.strings.CHANGE_EVENT, evtData);\n      }\n    });\n  };\n\n  MDCIconToggle.prototype.initialSyncWithDOM = function initialSyncWithDOM() {\n    this.on = this.root_.getAttribute(icon_toggle_foundation.strings.ARIA_PRESSED) === 'true';\n    this.disabled = this.root_.getAttribute(icon_toggle_foundation.strings.ARIA_DISABLED) === 'true';\n  };\n\n  /** @return {boolean} */\n\n\n  MDCIconToggle.prototype.refreshToggleData = function refreshToggleData() {\n    this.foundation_.refreshToggleData();\n  };\n\n  icon_toggle__createClass(MDCIconToggle, [{\n    key: 'iconEl_',\n    get: function get() {\n      var sel = this.root_.dataset['iconInnerSelector'];\n\n      return sel ?\n      /** @type {!Element} */this.root_.querySelector(sel) : this.root_;\n    }\n  }, {\n    key: 'on',\n    get: function get() {\n      return this.foundation_.isOn();\n    }\n\n    /** @param {boolean} isOn */\n    ,\n    set: function set(isOn) {\n      this.foundation_.toggle(isOn);\n    }\n\n    /** @return {boolean} */\n\n  }, {\n    key: 'disabled',\n    get: function get() {\n      return this.foundation_.isDisabled();\n    }\n\n    /** @param {boolean} isDisabled */\n    ,\n    set: function set(isDisabled) {\n      this.foundation_.setDisabled(isDisabled);\n    }\n  }]);\n\n  return MDCIconToggle;\n}(component[\"a\" /* default */]);\n\n\n// EXTERNAL MODULE: ../node_modules/preact-material-components/MaterialComponent.js\nvar MaterialComponent = __webpack_require__(\"lhA9\");\n\n// CONCATENATED MODULE: ../node_modules/preact-material-components/IconToggle/index.js\nfunction IconToggle__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction IconToggle__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction IconToggle__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar IconToggle__extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }return target;\n};\n\n\n\n\n\n/**\n * @prop disabled = false\n */\n\nvar IconToggle_IconToggle = function (_MaterialComponent) {\n  IconToggle__inherits(IconToggle, _MaterialComponent);\n\n  function IconToggle() {\n    IconToggle__classCallCheck(this, IconToggle);\n\n    var _this = IconToggle__possibleConstructorReturn(this, _MaterialComponent.call(this));\n\n    _this.componentName = \"icon-toggle\";\n    _this._onChange = _this._onChange.bind(_this);\n    return _this;\n  }\n\n  IconToggle.prototype._onChange = function _onChange(e) {\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  };\n\n  IconToggle.prototype.componentDidMount = function componentDidMount() {\n    this.MDComponent = new icon_toggle_MDCIconToggle(this.control);\n    this.MDComponent.listen(\"MDCIconToggle:change\", this._onChange);\n  };\n\n  IconToggle.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.MDComponent.unlisten(\"MDCIconToggle:change\", this._onChange);\n    this.MDComponent.destroy && this.MDComponent.destroy();\n  };\n\n  IconToggle.prototype.materialDom = function materialDom(props) {\n    var _this2 = this;\n\n    if (props[\"data-toggle-on\"]) props[\"data-toggle-on\"] = JSON.stringify(props[\"data-toggle-on\"]);\n    if (props[\"data-toggle-off\"]) props[\"data-toggle-off\"] = JSON.stringify(props[\"data-toggle-off\"]);\n    return Object(preact_min[\"h\"])(\"i\", IconToggle__extends({}, props, {\n      className: \"material-icons \" + props.className || \"\",\n      ref: function ref(control) {\n        _this2.control = control;\n      }\n    }), props.children);\n  };\n\n  return IconToggle;\n}(MaterialComponent[\"a\" /* default */]);\n\n\n// EXTERNAL MODULE: ./components/component-table/index.js\nvar component_table = __webpack_require__(\"B/9r\");\n\n// EXTERNAL MODULE: ./components/code-block/index.js\nvar code_block = __webpack_require__(\"F4jb\");\n\n// EXTERNAL MODULE: ./routes/icon-toggle/sample.txt\nvar sample = __webpack_require__(\"oqLc\");\nvar sample_default = /*#__PURE__*/__webpack_require__.n(sample);\n\n// CONCATENATED MODULE: ../node_modules/babel-loader/lib?{\"babelrc\":false,\"presets\":[[\"/Users/prateekbh/projects/preact-material-components/docs/node_modules/babel-preset-env/lib/index.js\",{\"loose\":true,\"uglify\":true,\"modules\":false,\"targets\":{\"browsers\":[\"> 1%\",\"last 2 versions\",\"IE >= 9\"]},\"exclude\":[\"transform-regenerator\",\"transform-es2015-typeof-symbol\"]}],\"/Users/prateekbh/projects/preact-material-components/docs/node_modules/babel-preset-stage-1/lib/index.js\"],\"plugins\":[\"/Users/prateekbh/projects/preact-material-components/docs/node_modules/babel-plugin-transform-object-assign/lib/index.js\",\"/Users/prateekbh/projects/preact-material-components/docs/node_modules/babel-plugin-transform-decorators-legacy/lib/index.js\",\"/Users/prateekbh/projects/preact-material-components/docs/node_modules/babel-plugin-transform-react-constant-elements/lib/index.js\",\"/Users/prateekbh/projects/preact-material-components/docs/node_modules/babel-plugin-transform-react-remove-prop-types/lib/index.js\",[\"/Users/prateekbh/projects/preact-material-components/docs/node_modules/babel-plugin-transform-react-jsx/lib/index.js\",{\"pragma\":\"h\"}],[\"/Users/prateekbh/projects/preact-material-components/docs/node_modules/babel-plugin-jsx-pragmatic/jsx-pragmatic.js\",{\"module\":\"preact\",\"export\":\"h\",\"import\":\"h\"}]]}!./routes/icon-toggle/index.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return icon_toggle_IconTogglePage; });\n\n\nfunction jsx_pragmatic_js____module___preact___export___h___import___h______routes_icon_toggle__classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction jsx_pragmatic_js____module___preact___export___h___import___h______routes_icon_toggle__possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction jsx_pragmatic_js____module___preact___export___h___import___h______routes_icon_toggle__inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Dependencies\n\n\n// Material Components\n\n\n// Components\n\n\n\n// Samples\n\n\n// Class\n\nvar _ref = Object(preact_min[\"h\"])(\n  \"div\",\n  { className: \"mdc-typography--display1\" },\n  \"Sample code \"\n);\n\nvar _ref2 = Object(preact_min[\"h\"])(\n  code_block[\"a\" /* default */],\n  null,\n  Object(preact_min[\"h\"])(\n    \"code\",\n    { \"class\": \"lang-js\" },\n    sample_default.a\n  )\n);\n\nvar _ref3 = Object(preact_min[\"h\"])(\n  \"div\",\n  { className: \"mdc-typography--display1\" },\n  \"Original documentation\"\n);\n\nvar _ref4 = Object(preact_min[\"h\"])(\n  \"div\",\n  { className: \"mdc-typography--body\" },\n  \"This component encapsulates\",\n  \" \",\n  Object(preact_min[\"h\"])(\n    \"span\",\n    { className: \"strong\" },\n    \"mdc-icon-toggle\"\n  ),\n  \", you can refer to its documentation\",\n  Object(preact_min[\"h\"])(\n    \"a\",\n    { href: \"https://github.com/material-components/material-components-web/tree/master/packages/mdc-icon-toggle\" },\n    \" \",\n    \"here\"\n  ),\n  \".\"\n);\n\nvar _ref5 = Object(preact_min[\"h\"])(\n  \"div\",\n  { className: \"mdc-typography--display1\" },\n  \"Demo \"\n);\n\nvar icon_toggle_IconTogglePage = function (_Component) {\n  jsx_pragmatic_js____module___preact___export___h___import___h______routes_icon_toggle__inherits(IconTogglePage, _Component);\n\n  function IconTogglePage() {\n    jsx_pragmatic_js____module___preact___export___h___import___h______routes_icon_toggle__classCallCheck(this, IconTogglePage);\n\n    var _this = jsx_pragmatic_js____module___preact___export___h___import___h______routes_icon_toggle__possibleConstructorReturn(this, _Component.call(this));\n\n    _this.propsTable = [{\n      component: \"IconToggle\",\n      props: [{\n        name: \"disabled\",\n        description: \"Is the icon disabled\"\n      }, {\n        name: \"data-toggle-on\",\n        description: \"JSON object for toggle on icon\"\n      }, {\n        name: \"data-toggle-off\",\n        description: \"JSON object for toggle off icon\"\n      }]\n    }];\n    return _this;\n  }\n\n  IconTogglePage.prototype.render = function render() {\n    var toggleOnIcon = {\n      content: \"favorite\",\n      label: \"Remove From Favorites\"\n    };\n    var toggleOffIcon = {\n      content: \"favorite_border\",\n      label: \"Add to Favorites\"\n    };\n    return Object(preact_min[\"h\"])(\n      \"div\",\n      null,\n      Object(preact_min[\"h\"])(component_table[\"a\" /* default */], { data: this.propsTable }),\n      _ref,\n      _ref2,\n      _ref3,\n      _ref4,\n      _ref5,\n      Object(preact_min[\"h\"])(\n        IconToggle_IconToggle,\n        {\n          role: \"button\",\n          tabindex: \"0\",\n          \"aria-pressed\": \"false\",\n          \"aria-label\": \"Add to favorites\",\n          \"data-toggle-on\": toggleOnIcon,\n          \"data-toggle-off\": toggleOffIcon\n        },\n        \"favorite_border\"\n      )\n    );\n  };\n\n  return IconTogglePage;\n}(preact_min[\"Component\"]);\n\n\n\n/***/ }),\n\n/***/ \"oqLc\":\n/***/ (function(module, exports) {\n\nmodule.exports = \"import {h, Component} from 'preact';\\nimport List from 'preact-material-components/List';\\nimport Formfield from 'preact-material-components/Formfield';\\nimport 'preact-material-components/List/style.css';\\n\\nexport default class ListPage extends Component {\\n  const toggleOnIcon = {\\n    content: \\\"favorite\\\",\\n    label: \\\"Remove From Favorites\\\"\\n  };\\n  const toggleOffIcon = {\\n    content: \\\"favorite_border\\\",\\n    label: \\\"Add to Favorites\\\"\\n  };\\n  render(){\\n    return (\\n      <div>\\n        <IconToggle\\n          role=\\\"button\\\"\\n          tabindex=\\\"0\\\"\\n          aria-pressed=\\\"false\\\"\\n          aria-label=\\\"Add to favorites\\\"\\n          data-toggle-on={toggleOnIcon}\\n          data-toggle-off={toggleOffIcon}\\n        >\\n          favorite_border\\n        </IconToggle>\\n      </div>\\n    );\\n  }\\n}\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// route-icon-toggle.chunk.b71dc.js","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCIconToggleAdapter, IconToggleEvent} from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCIconToggleAdapter>}\n */\nclass MDCIconToggleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      setText: (/* text: string */) => {},\n      getTabIndex: () => /* number */ 0,\n      setTabIndex: (/* tabIndex: number */) => {},\n      getAttr: (/* name: string */) => /* string */ '',\n      setAttr: (/* name: string, value: string */) => {},\n      rmAttr: (/* name: string */) => {},\n      notifyChange: (/* evtData: IconToggleEvent */) => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCIconToggleFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.on_ = false;\n\n    /** @private {boolean} */\n    this.disabled_ = false;\n\n    /** @private {number} */\n    this.savedTabIndex_ = -1;\n\n    /** @private {?IconToggleState} */\n    this.toggleOnData_ = null;\n\n    /** @private {?IconToggleState} */\n    this.toggleOffData_ = null;\n\n    this.clickHandler_ = /** @private {!EventListener} */ (\n      () => this.toggleFromEvt_());\n\n    /** @private {boolean} */\n    this.isHandlingKeydown_ = false;\n\n    this.keydownHandler_ = /** @private {!EventListener} */ ((/** @type {!KeyboardKey} */ evt) => {\n      if (isSpace(evt)) {\n        this.isHandlingKeydown_ = true;\n        return evt.preventDefault();\n      }\n    });\n\n    this.keyupHandler_ = /** @private {!EventListener} */ ((/** @type {!KeyboardKey} */ evt) => {\n      if (isSpace(evt)) {\n        this.isHandlingKeydown_ = false;\n        this.toggleFromEvt_();\n      }\n    });\n  }\n\n  init() {\n    this.refreshToggleData();\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.registerInteractionHandler('keyup', this.keyupHandler_);\n  }\n\n  refreshToggleData() {\n    const {DATA_TOGGLE_ON, DATA_TOGGLE_OFF} = MDCIconToggleFoundation.strings;\n    this.toggleOnData_ = this.parseJsonDataAttr_(DATA_TOGGLE_ON);\n    this.toggleOffData_ = this.parseJsonDataAttr_(DATA_TOGGLE_OFF);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.deregisterInteractionHandler('keyup', this.keyupHandler_);\n  }\n\n  /** @private */\n  toggleFromEvt_() {\n    this.toggle();\n    const {on_: isOn} = this;\n    this.adapter_.notifyChange(/** @type {!IconToggleEvent} */ ({isOn}));\n  }\n\n  /** @return {boolean} */\n  isOn() {\n    return this.on_;\n  }\n\n  /** @param {boolean=} isOn */\n  toggle(isOn = !this.on_) {\n    this.on_ = isOn;\n\n    const {ARIA_LABEL, ARIA_PRESSED} = MDCIconToggleFoundation.strings;\n\n    if (this.on_) {\n      this.adapter_.setAttr(ARIA_PRESSED, 'true');\n    } else {\n      this.adapter_.setAttr(ARIA_PRESSED, 'false');\n    }\n\n    const {cssClass: classToRemove} =\n        this.on_ ? this.toggleOffData_ : this.toggleOnData_;\n\n    if (classToRemove) {\n      this.adapter_.removeClass(classToRemove);\n    }\n\n    const {content, label, cssClass} = this.on_ ? this.toggleOnData_ : this.toggleOffData_;\n\n    if (cssClass) {\n      this.adapter_.addClass(cssClass);\n    }\n    if (content) {\n      this.adapter_.setText(content);\n    }\n    if (label) {\n      this.adapter_.setAttr(ARIA_LABEL, label);\n    }\n  }\n\n  /**\n   * @param {string} dataAttr\n   * @return {!IconToggleState}\n   */\n  parseJsonDataAttr_(dataAttr) {\n    const val = this.adapter_.getAttr(dataAttr);\n    if (!val) {\n      return {};\n    }\n    return /** @type {!IconToggleState} */ (JSON.parse(val));\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.disabled_;\n  }\n\n  /** @param {boolean} isDisabled */\n  setDisabled(isDisabled) {\n    this.disabled_ = isDisabled;\n\n    const {DISABLED} = MDCIconToggleFoundation.cssClasses;\n    const {ARIA_DISABLED} = MDCIconToggleFoundation.strings;\n\n    if (this.disabled_) {\n      this.savedTabIndex_ = this.adapter_.getTabIndex();\n      this.adapter_.setTabIndex(-1);\n      this.adapter_.setAttr(ARIA_DISABLED, 'true');\n      this.adapter_.addClass(DISABLED);\n    } else {\n      this.adapter_.setTabIndex(this.savedTabIndex_);\n      this.adapter_.rmAttr(ARIA_DISABLED);\n      this.adapter_.removeClass(DISABLED);\n    }\n  }\n\n  /** @return {boolean} */\n  isKeyboardActivated() {\n    return this.isHandlingKeydown_;\n  }\n}\n\n/**\n * @typedef {!{\n *   key: string,\n *   keyCode: number\n * }}\n */\nlet KeyboardKey;\n\n/**\n * @param {!KeyboardKey} keyboardKey\n * @return {boolean}\n */\nfunction isSpace(keyboardKey) {\n  return keyboardKey.key === 'Space' || keyboardKey.keyCode === 32;\n}\n\n\n/** @record */\nclass IconToggleState {}\n\n/**\n * The aria-label value of the icon toggle, or undefined if there is no aria-label.\n * @export {string|undefined}\n */\nIconToggleState.prototype.label;\n\n/**\n * The text for the icon toggle, or undefined if there is no text.\n * @export {string|undefined}\n */\nIconToggleState.prototype.content;\n\n/**\n * The CSS class to add to the icon toggle, or undefined if there is no CSS class.\n * @export {string|undefined}\n */\nIconToggleState.prototype.cssClass;\n\nexport default MDCIconToggleFoundation;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@material/icon-toggle/foundation.js","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-icon-toggle',\n  DISABLED: 'mdc-icon-toggle--disabled',\n};\n\n/** @enum {string} */\nconst strings = {\n  DATA_TOGGLE_ON: 'data-toggle-on',\n  DATA_TOGGLE_OFF: 'data-toggle-off',\n  ARIA_PRESSED: 'aria-pressed',\n  ARIA_DISABLED: 'aria-disabled',\n  ARIA_LABEL: 'aria-label',\n  CHANGE_EVENT: 'MDCIconToggle:change',\n};\n\nexport {cssClasses, strings};\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@material/icon-toggle/constants.js","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Icon Toggle. Provides an interface for managing\n * - classes\n * - dom\n * - inner text\n * - event handlers\n * - event dispatch\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/architecture.md\n *\n * @record\n */\n\nclass MDCIconToggleAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  registerInteractionHandler(type, handler) {}\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  deregisterInteractionHandler(type, handler) {}\n\n  /** @param {string} text */\n  setText(text) {}\n\n  /** @return {number} */\n  getTabIndex() {}\n\n  /** @param {number} tabIndex */\n  setTabIndex(tabIndex) {}\n\n  /**\n   * @param {string} name\n   * @return {string}\n   */\n  getAttr(name) {}\n\n  /**\n   * @param {string} name\n   * @param {string} value\n   */\n  setAttr(name, value) {}\n\n  /** @param {string} name */\n  rmAttr(name) {}\n\n  /** @param {!IconToggleEvent} evtData */\n  notifyChange(evtData) {}\n}\n\n/**\n * @typedef {!{\n *   isOn: boolean,\n * }}\n */\nlet IconToggleEvent;\n\nexport {MDCIconToggleAdapter, IconToggleEvent};\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@material/icon-toggle/adapter.js","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCComponent from '@material/base/component';\nimport MDCIconToggleFoundation from './foundation';\nimport {MDCRipple, MDCRippleFoundation} from '@material/ripple';\n\n/**\n * @extends {MDCComponent<!MDCIconToggleFoundation>}\n */\nclass MDCIconToggle extends MDCComponent {\n  static attachTo(root) {\n    return new MDCIconToggle(root);\n  }\n\n  constructor(...args) {\n    super(...args);\n\n    /** @private {!MDCRipple} */\n    this.ripple_ = this.initRipple_();\n  }\n\n  /** @return {!Element} */\n  get iconEl_() {\n    const {'iconInnerSelector': sel} = this.root_.dataset;\n    return sel ?\n      /** @type {!Element} */ (this.root_.querySelector(sel)) : this.root_;\n  }\n\n  /**\n   * @return {!MDCRipple}\n   * @private\n   */\n  initRipple_() {\n    const adapter = Object.assign(MDCRipple.createAdapter(this), {\n      isUnbounded: () => true,\n      isSurfaceActive: () => this.foundation_.isKeyboardActivated(),\n      computeBoundingRect: () => {\n        const dim = 48;\n        const {left, top} = this.root_.getBoundingClientRect();\n        return {\n          left,\n          top,\n          width: dim,\n          height: dim,\n          right: left + dim,\n          bottom: left + dim,\n        };\n      },\n    });\n    const foundation = new MDCRippleFoundation(adapter);\n    return new MDCRipple(this.root_, foundation);\n  }\n\n  destroy() {\n    this.ripple_.destroy();\n    super.destroy();\n  }\n\n  /** @return {!MDCIconToggleFoundation} */\n  getDefaultFoundation() {\n    return new MDCIconToggleFoundation({\n      addClass: (className) => this.iconEl_.classList.add(className),\n      removeClass: (className) => this.iconEl_.classList.remove(className),\n      registerInteractionHandler: (type, handler) => this.root_.addEventListener(type, handler),\n      deregisterInteractionHandler: (type, handler) => this.root_.removeEventListener(type, handler),\n      setText: (text) => this.iconEl_.textContent = text,\n      getTabIndex: () => /* number */ this.root_.tabIndex,\n      setTabIndex: (tabIndex) => this.root_.tabIndex = tabIndex,\n      getAttr: (name, value) => this.root_.getAttribute(name, value),\n      setAttr: (name, value) => this.root_.setAttribute(name, value),\n      rmAttr: (name) => this.root_.removeAttribute(name),\n      notifyChange: (evtData) => this.emit(MDCIconToggleFoundation.strings.CHANGE_EVENT, evtData),\n    });\n  }\n\n  initialSyncWithDOM() {\n    this.on = this.root_.getAttribute(MDCIconToggleFoundation.strings.ARIA_PRESSED) === 'true';\n    this.disabled = this.root_.getAttribute(MDCIconToggleFoundation.strings.ARIA_DISABLED) === 'true';\n  }\n\n  /** @return {boolean} */\n  get on() {\n    return this.foundation_.isOn();\n  }\n\n  /** @param {boolean} isOn */\n  set on(isOn) {\n    this.foundation_.toggle(isOn);\n  }\n\n  /** @return {boolean} */\n  get disabled() {\n    return this.foundation_.isDisabled();\n  }\n\n  /** @param {boolean} isDisabled */\n  set disabled(isDisabled) {\n    this.foundation_.setDisabled(isDisabled);\n  }\n\n  refreshToggleData() {\n    this.foundation_.refreshToggleData();\n  }\n}\n\nexport {MDCIconToggle, MDCIconToggleFoundation};\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@material/icon-toggle/index.js","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport { h } from \"preact\";\nimport { MDCIconToggle } from \"@material/icon-toggle/\";\nimport MaterialComponent from \"../MaterialComponent\";\n\n/**\n * @prop disabled = false\n */\nexport default class IconToggle extends MaterialComponent {\n  constructor() {\n    super();\n    this.componentName = \"icon-toggle\";\n    this._onChange = this._onChange.bind(this);\n  }\n  _onChange(e) {\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  }\n  componentDidMount() {\n    this.MDComponent = new MDCIconToggle(this.control);\n    this.MDComponent.listen(\"MDCIconToggle:change\", this._onChange);\n  }\n  componentWillUnmount() {\n    this.MDComponent.unlisten(\"MDCIconToggle:change\", this._onChange);\n    this.MDComponent.destroy && this.MDComponent.destroy();\n  }\n  materialDom(props) {\n    if (props[\"data-toggle-on\"]) props[\"data-toggle-on\"] = JSON.stringify(props[\"data-toggle-on\"]);\n    if (props[\"data-toggle-off\"]) props[\"data-toggle-off\"] = JSON.stringify(props[\"data-toggle-off\"]);\n    return h(\n      \"i\",\n      _extends({}, props, {\n        className: \"material-icons \" + props.className || \"\",\n        ref: control => {\n          this.control = control;\n        }\n      }),\n      props.children\n    );\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ../node_modules/preact-material-components/IconToggle/index.js","// Dependencies\nimport { h, Component } from \"preact\";\n\n// Material Components\nimport IconToggle from \"preact-material-components/IconToggle\";\n\n// Components\nimport ComponentTable from \"../../components/component-table\";\nimport CodeBlock from \"../../components/code-block\";\n\n// Samples\nimport sample from \"./sample.txt\";\n\n// Class\nexport default class IconTogglePage extends Component {\n  constructor() {\n    super();\n    this.propsTable = [\n      {\n        component: \"IconToggle\",\n        props: [\n          {\n            name: \"disabled\",\n            description: \"Is the icon disabled\"\n          },\n          {\n            name: \"data-toggle-on\",\n            description: \"JSON object for toggle on icon\"\n          },\n          {\n            name: \"data-toggle-off\",\n            description: \"JSON object for toggle off icon\"\n          }\n        ]\n      }\n    ];\n  }\n  render() {\n    const toggleOnIcon = {\n      content: \"favorite\",\n      label: \"Remove From Favorites\"\n    };\n    const toggleOffIcon = {\n      content: \"favorite_border\",\n      label: \"Add to Favorites\"\n    };\n    return (\n      <div>\n        <ComponentTable data={this.propsTable} />\n\n        <div className=\"mdc-typography--display1\">Sample code </div>\n        <CodeBlock>\n          <code class=\"lang-js\">{sample}</code>\n        </CodeBlock>\n\n        <div className=\"mdc-typography--display1\">Original documentation</div>\n        <div className=\"mdc-typography--body\">\n          This component encapsulates{\" \"}\n          <span className=\"strong\">mdc-icon-toggle</span>, you can refer to its\n          documentation\n          <a href=\"https://github.com/material-components/material-components-web/tree/master/packages/mdc-icon-toggle\">\n            {\" \"}\n            here\n          </a>.\n        </div>\n\n        <div className=\"mdc-typography--display1\">Demo </div>\n        <IconToggle\n          role=\"button\"\n          tabindex=\"0\"\n          aria-pressed=\"false\"\n          aria-label=\"Add to favorites\"\n          data-toggle-on={toggleOnIcon}\n          data-toggle-off={toggleOffIcon}\n        >\n          favorite_border\n        </IconToggle>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./routes/icon-toggle/index.js","module.exports = \"import {h, Component} from 'preact';\\nimport List from 'preact-material-components/List';\\nimport Formfield from 'preact-material-components/Formfield';\\nimport 'preact-material-components/List/style.css';\\n\\nexport default class ListPage extends Component {\\n  const toggleOnIcon = {\\n    content: \\\"favorite\\\",\\n    label: \\\"Remove From Favorites\\\"\\n  };\\n  const toggleOffIcon = {\\n    content: \\\"favorite_border\\\",\\n    label: \\\"Add to Favorites\\\"\\n  };\\n  render(){\\n    return (\\n      <div>\\n        <IconToggle\\n          role=\\\"button\\\"\\n          tabindex=\\\"0\\\"\\n          aria-pressed=\\\"false\\\"\\n          aria-label=\\\"Add to favorites\\\"\\n          data-toggle-on={toggleOnIcon}\\n          data-toggle-off={toggleOffIcon}\\n        >\\n          favorite_border\\n        </IconToggle>\\n      </div>\\n    );\\n  }\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./routes/icon-toggle/sample.txt\n// module id = oqLc\n// module chunks = 24"],"sourceRoot":""}